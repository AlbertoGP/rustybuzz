// WARNING: this file was generated by ../scripts/gen-shaping-tests.py

mod shaping_impl;
use shaping_impl::shape;

#[test]
fn avar_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=100",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=150",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=200",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=250",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=300",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=350",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=400",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=450",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=500",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=550",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=600",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=650",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=700",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=750",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=800",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=850",
        ),
        "gid1"
    );
}

#[test]
fn avar_1_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestAVAR.ttf",
            "\u{2A01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=900",
        ),
        "gid1"
    );
}

#[test]
fn cff_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66"
    );
}

#[test]
fn cff_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{211D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid30"
    );
}

#[test]
fn cff_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{24EA}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid235"
    );
}

#[test]
fn cff_1_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{2460}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid97"
    );
}

#[test]
fn cff_1_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{2461}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid98"
    );
}

#[test]
fn cff_1_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{4EFF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid256"
    );
}

#[test]
fn cff_1_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{FF21}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid34"
    );
}

#[test]
fn cff_1_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{10133}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid52"
    );
}

#[test]
fn cff_1_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{1D4D0}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid209"
    );
}

#[test]
fn cff_1_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{1F33A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid59"
    );
}

#[test]
fn cff_1_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{1F33B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid60"
    );
}

#[test]
fn cff_1_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{1F4A7}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid168"
    );
}

#[test]
fn cff_1_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest257.otf",
            "\u{1F95D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid94"
    );
}

#[test]
fn cff_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66"
    );
}

#[test]
fn cff_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{211D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid8478"
    );
}

#[test]
fn cff_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{24EA}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid9451"
    );
}

#[test]
fn cff_2_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{2460}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid9313"
    );
}

#[test]
fn cff_2_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{2461}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid9314"
    );
}

#[test]
fn cff_2_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{4EFF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid20224"
    );
}

#[test]
fn cff_2_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{FF21}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid65314"
    );
}

#[test]
fn cff_2_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{10133}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid308"
    );
}

#[test]
fn cff_2_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{1D4D0}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid54481"
    );
}

#[test]
fn cff_2_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{1F33A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid62267"
    );
}

#[test]
fn cff_2_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{1F33B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid62268"
    );
}

#[test]
fn cff_2_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{1F4A7}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid62632"
    );
}

#[test]
fn cff_2_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/FDArrayTest65535.otf",
            "\u{1F95D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid63838"
    );
}

#[test]
fn cff2_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/AdobeVFPrototype-Subset.otf",
            "\u{0024}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=100",
        ),
        "dollar"
    );
}

#[test]
fn cff2_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/AdobeVFPrototype-Subset.otf",
            "\u{0024}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=200",
        ),
        "dollar"
    );
}

#[test]
fn cff2_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/AdobeVFPrototype-Subset.otf",
            "\u{0024}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=300",
        ),
        "dollar"
    );
}

#[test]
fn cff2_1_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/AdobeVFPrototype-Subset.otf",
            "\u{0024}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=400",
        ),
        "dollar"
    );
}

#[test]
fn cff2_1_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/AdobeVFPrototype-Subset.otf",
            "\u{0024}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=500",
        ),
        "dollar"
    );
}

#[test]
fn cff2_1_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/AdobeVFPrototype-Subset.otf",
            "\u{0024}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=600",
        ),
        "dollar"
    );
}

#[test]
fn cff2_1_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/AdobeVFPrototype-Subset.otf",
            "\u{0024}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=700",
        ),
        "dollar"
    );
}

#[test]
fn cff2_1_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/AdobeVFPrototype-Subset.otf",
            "\u{0024}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=800",
        ),
        "dollar.nostroke"
    );
}

#[test]
fn cff2_1_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/AdobeVFPrototype-Subset.otf",
            "\u{0024}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=900",
        ),
        "dollar.nostroke"
    );
}

#[test]
fn cmap_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAP14.otf",
            "\u{82A6}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni82A6_uE0100"
    );
}

#[test]
fn cmap_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAP14.otf",
            "\u{82A6}\u{E0100}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni82A6_uE0100"
    );
}

#[test]
fn cmap_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAP14.otf",
            "\u{82A6}\u{E0101}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni82A6_uE0101"
    );
}

#[test]
fn cmap_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAP14.otf",
            "\u{2269}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni2269"
    );
}

#[test]
fn cmap_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAP14.otf",
            "\u{2269}\u{FE00}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni2269FE00"
    );
}

#[test]
fn cmap_3_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{201C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{00C7}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{011E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{0049}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{0130}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{00D6}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{015E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{00DC}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{201D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{0061}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{0062}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{00E7}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{011F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{0131}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{0069}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{00F6}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_019() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{015F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cmap_3_020() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCMAPMacTurkish.ttf",
            "\u{00FC}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid0"
    );
}

#[test]
fn cvar_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCVARGVARTwo.ttf",
            "\u{0068}\u{006F}\u{006E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=28,wdth=100,opsz=72",
        ),
        "uni0068|\
         uni006F@595,0|\
         uni006E@1126,0"
    );
}

#[test]
fn cvar_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCVARGVARTwo.ttf",
            "\u{0068}\u{006F}\u{006E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=94,wdth=100,opsz=72",
        ),
        "uni0068|\
         uni006F@635,0|\
         uni006E@1212,0"
    );
}

#[test]
fn cvar_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCVARGVARTwo.ttf",
            "\u{0068}\u{006F}\u{006E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=194,wdth=100,opsz=72",
        ),
        "uni0068|\
         uni006F@691,0|\
         uni006E@1331,0"
    );
}

#[test]
fn cvar_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCVARGVAROne.ttf",
            "\u{0068}\u{006F}\u{006E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=28,wdth=100,opsz=72",
        ),
        "uni0068|\
         uni006F@595,0|\
         uni006E@1126,0"
    );
}

#[test]
fn cvar_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCVARGVAROne.ttf",
            "\u{0068}\u{006F}\u{006E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=94,wdth=100,opsz=72",
        ),
        "uni0068|\
         uni006F@635,0|\
         uni006E@1212,0"
    );
}

#[test]
fn cvar_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestCVARGVAROne.ttf",
            "\u{0068}\u{006F}\u{006E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=194,wdth=100,opsz=72",
        ),
        "uni0068|\
         uni006F@691,0|\
         uni006E@1331,0"
    );
}

#[test]
fn glyf_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGLYFOne.ttf",
            "\u{0123}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gcommaabove"
    );
}

#[test]
fn gpos_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0104}\u{004A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "Aogonek|\
         J@732,0"
    );
}

#[test]
fn gpos_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0104}\u{0067}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "Aogonek|\
         g@692,0"
    );
}

#[test]
fn gpos_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0104}\u{0123}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "Aogonek|\
         gcommaabove@692,0"
    );
}

#[test]
fn gpos_1_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0104}\u{006A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "Aogonek|\
         j@752,0"
    );
}

#[test]
fn gpos_1_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0104}\u{0237}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "Aogonek|\
         dotlessj@752,0"
    );
}

#[test]
fn gpos_1_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0051}\u{0237}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "Q|\
         dotlessj@734,0"
    );
}

#[test]
fn gpos_1_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0105}\u{006A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "aogonek|\
         j@588,0"
    );
}

#[test]
fn gpos_1_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0105}\u{0237}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "aogonek|\
         dotlessj@588,0"
    );
}

#[test]
fn gpos_1_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0067}\u{0237}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "g|\
         dotlessj@563,0"
    );
}

#[test]
fn gpos_1_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0123}\u{0237}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gcommaabove|\
         dotlessj@563,0"
    );
}

#[test]
fn gpos_1_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0131}\u{0237}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "dotlessi|\
         dotlessj@334,0"
    );
}

#[test]
fn gpos_1_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0173}\u{0237}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uogonek|\
         dotlessj@656,0"
    );
}

#[test]
fn gpos_1_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0076}\u{0237}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "v|\
         dotlessj@587,0"
    );
}

#[test]
fn gpos_1_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0056}\u{0061}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "V|\
         a@594,0"
    );
}

#[test]
fn gpos_1_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0056}\u{00E1}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "V|\
         aacute@594,0"
    );
}

#[test]
fn gpos_1_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0056}\u{0105}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "V|\
         aogonek@594,0"
    );
}

#[test]
fn gpos_1_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0056}\u{0066}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "V|\
         f@634,0"
    );
}

#[test]
fn gpos_1_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0056}\u{FB02}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "V|\
         fl@634,0"
    );
}

#[test]
fn gpos_1_019() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSOne.ttf",
            "\u{0056}\u{002E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "V|\
         period@504,0"
    );
}

#[test]
fn gpos_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSTwo.otf",
            "\u{25EF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni25EF"
    );
}

#[test]
fn gpos_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSTwo.otf",
            "\u{263C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "sun"
    );
}

#[test]
fn gpos_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSTwo.otf",
            "\u{25EF}\u{263C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni25EF|\
         sun"
    );
}

#[test]
fn gpos_3_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1208}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1208"
    );
}

#[test]
fn gpos_3_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1208}\u{135E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1208|\
         uni135E@303,0"
    );
}

#[test]
fn gpos_3_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1208}\u{135F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1208|\
         uni135F@303,0"
    );
}

#[test]
fn gpos_3_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1208}\u{135D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1208|\
         uni135D@303,0"
    );
}

#[test]
fn gpos_4_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSThree.ttf",
            "\u{0075}\u{0308}\u{0301}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "u|\
         uni0308@529,-31|\
         acutecomb@537,138"
    );
}

#[test]
fn gpos_4_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSThree.ttf",
            "\u{0075}\u{0308}\u{0304}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "u|\
         uni0308@529,-31|\
         uni0304@526,138"
    );
}

#[test]
fn gpos_4_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSThree.ttf",
            "\u{0075}\u{0308}\u{0308}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "u|\
         uni0308@529,-31|\
         uni0308@529,138"
    );
}

#[test]
fn gpos_4_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSThree.ttf",
            "\u{0075}\u{0308}\u{0308}\u{0308}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "u|\
         uni0308@529,-31|\
         uni0308@529,138|\
         uni0308@529,307"
    );
}

#[test]
fn gpos_5_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSFour.ttf",
            "\u{0634}\u{0652}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=100",
        ),
        "uni0652@663,144|\
         uni0634"
    );
}

#[test]
fn gpos_5_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSFour.ttf",
            "\u{0634}\u{0652}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=300",
        ),
        "uni0652@680,165|\
         uni0634"
    );
}

#[test]
fn gpos_5_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSFour.ttf",
            "\u{0634}\u{0652}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=600",
        ),
        "uni0652@730,246|\
         uni0634"
    );
}

#[test]
fn gpos_5_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSFour.ttf",
            "\u{0634}\u{0652}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=700",
        ),
        "uni0652@750,282|\
         uni0634"
    );
}

#[test]
fn gpos_5_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGPOSFour.ttf",
            "\u{0634}\u{0652}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=900",
        ),
        "uni0652@784,351|\
         uni0634"
    );
}

#[test]
fn gsub_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGSUBOne.otf",
            "\u{0061}\u{0020}\u{0061}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "a.alt|\
         space@500,0|\
         a@1000,0"
    );
}

#[test]
fn gsub_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1373}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1373"
    );
}

#[test]
fn gsub_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{136B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni136B"
    );
}

#[test]
fn gsub_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1375}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1375"
    );
}

#[test]
fn gsub_2_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{136D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni136D"
    );
}

#[test]
fn gsub_2_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1373}\u{136B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1373.init|\
         uni136B.fina@621,0"
    );
}

#[test]
fn gsub_2_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1375}\u{136D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1375.init|\
         uni136D.fina@662,0"
    );
}

#[test]
fn gsub_2_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{137B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni137B"
    );
}

#[test]
fn gsub_2_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1373}\u{136B}\u{137B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1373.init|\
         uni136B.medi@621,0|\
         uni137B.fina@1101,0"
    );
}

#[test]
fn gsub_2_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1373}\u{136B}\u{137B}\u{1373}\u{136B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1373.init|\
         uni136B.medi@621,0|\
         uni137B.medi@1101,0|\
         uni1373.medi@1488,0|\
         uni136B.fina@2109,0"
    );
}

#[test]
fn gsub_2_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1373}\u{136B}\u{137B}\u{1375}\u{136D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1373.init|\
         uni136B.medi@621,0|\
         uni137B.medi@1101,0|\
         uni1375.medi@1488,0|\
         uni136D.fina@2155,0"
    );
}

#[test]
fn gsub_2_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeEthi.ttf",
            "\u{1375}\u{136D}\u{137B}\u{1373}\u{136B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1375.init|\
         uni136D.medi@662,0|\
         uni137B.medi@1203,0|\
         uni1373.medi@1590,0|\
         uni136B.fina@2211,0"
    );
}

#[test]
fn gsub_3_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGSUBThree.ttf",
            "\u{006C}\u{006F}\u{006C}",
            "",
        ),
        "l=0+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=1+258|\
         o=1+605|\
         l=2+258"
    );
}

#[test]
fn gvar_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAROne.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=300",
        ),
        "gid2"
    );
}

#[test]
fn gvar_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAROne.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=350",
        ),
        "gid2"
    );
}

#[test]
fn gvar_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAROne.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=400",
        ),
        "gid2"
    );
}

#[test]
fn gvar_1_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAROne.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=450",
        ),
        "gid2"
    );
}

#[test]
fn gvar_1_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAROne.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=500",
        ),
        "gid2"
    );
}

#[test]
fn gvar_1_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAROne.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=550",
        ),
        "gid2"
    );
}

#[test]
fn gvar_1_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAROne.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=600",
        ),
        "gid2"
    );
}

#[test]
fn gvar_1_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAROne.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=650",
        ),
        "gid2"
    );
}

#[test]
fn gvar_1_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAROne.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=700",
        ),
        "gid2"
    );
}

#[test]
fn gvar_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARTwo.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=300",
        ),
        "gid2"
    );
}

#[test]
fn gvar_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARTwo.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=350",
        ),
        "gid2"
    );
}

#[test]
fn gvar_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARTwo.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=400",
        ),
        "gid2"
    );
}

#[test]
fn gvar_2_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARTwo.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=450",
        ),
        "gid2"
    );
}

#[test]
fn gvar_2_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARTwo.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=500",
        ),
        "gid2"
    );
}

#[test]
fn gvar_2_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARTwo.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=550",
        ),
        "gid2"
    );
}

#[test]
fn gvar_2_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARTwo.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=600",
        ),
        "gid2"
    );
}

#[test]
fn gvar_2_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARTwo.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=650",
        ),
        "gid2"
    );
}

#[test]
fn gvar_2_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARTwo.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=700",
        ),
        "gid2"
    );
}

#[test]
fn gvar_3_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARThree.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=300",
        ),
        "gid2"
    );
}

#[test]
fn gvar_3_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARThree.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=350",
        ),
        "gid2"
    );
}

#[test]
fn gvar_3_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARThree.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=400",
        ),
        "gid2"
    );
}

#[test]
fn gvar_3_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARThree.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=450",
        ),
        "gid2"
    );
}

#[test]
fn gvar_3_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARThree.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=500",
        ),
        "gid2"
    );
}

#[test]
fn gvar_3_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARThree.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=550",
        ),
        "gid2"
    );
}

#[test]
fn gvar_3_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARThree.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=600",
        ),
        "gid2"
    );
}

#[test]
fn gvar_3_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARThree.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=650",
        ),
        "gid2"
    );
}

#[test]
fn gvar_3_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARThree.ttf",
            "\u{5F4C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=700",
        ),
        "gid2"
    );
}

#[test]
fn gvar_4_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-1.0,T1=0.0",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-0.8,T1=0.1",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-0.6,T1=0.2",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-0.4,T1=0.3",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-0.2,T1=0.4",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.0,T1=0.5",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.2,T1=0.6",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.4,T1=0.7",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.6,T1=0.8",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.8,T1=0.9",
        ),
        "gid5"
    );
}

#[test]
fn gvar_4_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F98E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=1.0,T1=1.0",
        ),
        "gid5"
    );
}

#[test]
fn gvar_5_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-1.0",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-0.8",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-0.6",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-0.4",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=-0.2",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.0",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.2",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.4",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.6",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=0.8",
        ),
        "gid15"
    );
}

#[test]
fn gvar_5_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F31D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=M1=1.0",
        ),
        "gid15"
    );
}

#[test]
fn gvar_6_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.0",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.1",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.2",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.3",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.4",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.5",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.6",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.7",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.8",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=0.9",
        ),
        "gid12"
    );
}

#[test]
fn gvar_6_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/Zycon.ttf",
            "\u{1F422}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=T1=1.0",
        ),
        "gid12"
    );
}

#[test]
fn gvar_7_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARFour.ttf",
            "\u{004F}\u{0049}\u{004F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=150",
        ),
        "uni004F|\
         uni0049@706,0|\
         uni004F@1072,0"
    );
}

#[test]
fn gvar_7_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARFour.ttf",
            "\u{004F}\u{0049}\u{004F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=200",
        ),
        "uni004F|\
         uni0049@707,0|\
         uni004F@1074,0"
    );
}

#[test]
fn gvar_7_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARFour.ttf",
            "\u{004F}\u{0049}\u{004F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=250",
        ),
        "uni004F|\
         uni0049@707,0|\
         uni004F@1075,0"
    );
}

#[test]
fn gvar_7_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARFour.ttf",
            "\u{004F}\u{0049}\u{004F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=300",
        ),
        "uni004F|\
         uni0049@707,0|\
         uni004F@1076,0"
    );
}

#[test]
fn gvar_7_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARFour.ttf",
            "\u{004F}\u{0049}\u{004F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=350",
        ),
        "uni004F|\
         uni0049@707,0|\
         uni004F@1077,0"
    );
}

#[test]
fn gvar_7_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARFour.ttf",
            "\u{004F}\u{0049}\u{004F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=400",
        ),
        "uni004F|\
         uni0049@707,0|\
         uni004F@1078,0"
    );
}

#[test]
fn gvar_7_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARFour.ttf",
            "\u{004F}\u{0049}\u{004F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=450",
        ),
        "uni004F|\
         uni0049@706,0|\
         uni004F@1079,0"
    );
}

#[test]
fn gvar_8_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAREight.ttf",
            "\u{0048}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=HV=0.0",
        ),
        "H"
    );
}

#[test]
fn gvar_8_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAREight.ttf",
            "\u{0048}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=HV=-0.2",
        ),
        "H"
    );
}

#[test]
fn gvar_8_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAREight.ttf",
            "\u{0048}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=HV=-0.4",
        ),
        "H"
    );
}

#[test]
fn gvar_8_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAREight.ttf",
            "\u{0048}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=HV=-0.6",
        ),
        "H"
    );
}

#[test]
fn gvar_8_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAREight.ttf",
            "\u{0048}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=HV=-0.8",
        ),
        "H"
    );
}

#[test]
fn gvar_8_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVAREight.ttf",
            "\u{0048}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=HV=-1.0",
        ),
        "H"
    );
}

#[test]
fn gvar_9_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=-1.0",
        ),
        "A"
    );
}

#[test]
fn gvar_9_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=-0.5",
        ),
        "A"
    );
}

#[test]
fn gvar_9_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=0.0",
        ),
        "A"
    );
}

#[test]
fn gvar_9_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=0.5",
        ),
        "A"
    );
}

#[test]
fn gvar_9_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=0.6",
        ),
        "A"
    );
}

#[test]
fn gvar_9_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=0.7",
        ),
        "A"
    );
}

#[test]
fn gvar_9_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=0.8",
        ),
        "A"
    );
}

#[test]
fn gvar_9_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=0.9",
        ),
        "A"
    );
}

#[test]
fn gvar_9_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=0.944444",
        ),
        "A"
    );
}

#[test]
fn gvar_9_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestGVARNine.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=TEST=1.0",
        ),
        "A"
    );
}

#[test]
fn hvar_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVAROne.otf",
            "\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=0",
        ),
        "A|\
         B@520,0|\
         C@1094,0"
    );
}

#[test]
fn hvar_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVAROne.otf",
            "\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=200",
        ),
        "A|\
         B@533,0|\
         C@1115,0"
    );
}

#[test]
fn hvar_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVAROne.otf",
            "\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=400",
        ),
        "A|\
         B@546,0|\
         C@1135,0"
    );
}

#[test]
fn hvar_1_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVAROne.otf",
            "\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=600",
        ),
        "A|\
         B@558,0|\
         C@1155,0"
    );
}

#[test]
fn hvar_1_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVAROne.otf",
            "\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=800",
        ),
        "A|\
         B@571,0|\
         C@1175,0"
    );
}

#[test]
fn hvar_1_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVAROne.otf",
            "\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=1000",
        ),
        "A|\
         B@584,0|\
         C@1196,0"
    );
}

#[test]
fn hvar_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVARTwo.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=0",
        ),
        "uni0041|\
         uni0042@450,0"
    );
}

#[test]
fn hvar_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVARTwo.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=200",
        ),
        "uni0041|\
         uni0042@515,0"
    );
}

#[test]
fn hvar_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVARTwo.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=400",
        ),
        "uni0041|\
         uni0042@584,0"
    );
}

#[test]
fn hvar_2_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVARTwo.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=600",
        ),
        "uni0041|\
         uni0042@673,0"
    );
}

#[test]
fn hvar_2_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVARTwo.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=800",
        ),
        "uni0041|\
         uni0042@761,0"
    );
}

#[test]
fn hvar_2_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestHVARTwo.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft --variations=wght=1000",
        ),
        "uni0041|\
         uni0042@850,0"
    );
}

#[test]
fn kern_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestKERNOne.otf",
            "\u{0131}\u{0054}\u{0075}\u{0054}\u{0075}\u{0054}\u{0131}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "dotlessi|\
         T|\
         u@400,0|\
         T@600,0|\
         u@1000,0|\
         T@1200,0|\
         dotlessi@1600,0"
    );
}

#[test]
fn kern_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestKERNOne.otf",
            "\u{0075}\u{0131}\u{0131}\u{0054}\u{0131}\u{0131}\u{0054}\u{0131}\u{0131}\u{0075}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "u|\
         dotlessi@400,0|\
         dotlessi@1100,0|\
         T@1100,0|\
         dotlessi@1500,0|\
         dotlessi@2200,0|\
         T@2200,0|\
         dotlessi@2600,0|\
         dotlessi@3300,0|\
         u@3500,0"
    );
}

#[test]
fn morx_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXOne.ttf",
            "\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A.alt|\
         B@1000,0|\
         C.alt@2000,0"
    );
}

#[test]
fn morx_10_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTen.ttf",
            "\u{0041}\u{0042}\u{0041}\u{0042}\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@638,0|\
         A@1288,0|\
         B@1926,0|\
         B@2576,0|\
         A@3226,0"
    );
}

#[test]
fn morx_11_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEleven.ttf",
            "\u{0042}\u{0041}\u{0042}\u{0042}\u{0041}\u{0041}\u{0042}\u{0058}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         A@650,0|\
         B@1288,0|\
         B@1938,0|\
         A@2588,0|\
         X@3226,0|\
         A@3812,0|\
         B@4450,0"
    );
}

#[test]
fn morx_12_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwelve.ttf",
            "\u{0058}\u{0041}\u{0042}\u{0043}\u{0058}\u{0031}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "X|\
         C@598,0|\
         A@1230,0|\
         B@1868,0|\
         X@2518,0|\
         one@3116,0"
    );
}

#[test]
fn morx_12_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwelve.ttf",
            "\u{0058}\u{0041}\u{0042}\u{0043}\u{0058}\u{0032}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "X|\
         C@598,0|\
         A@1230,0|\
         B@1868,0|\
         X@2518,0|\
         two@3116,0"
    );
}

#[test]
fn morx_12_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwelve.ttf",
            "\u{0058}\u{0041}\u{0042}\u{0043}\u{0058}\u{0033}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "X|\
         B@598,0|\
         C@1248,0|\
         A@1880,0|\
         X@2518,0|\
         three@3116,0"
    );
}

#[test]
fn morx_13_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirteen.ttf",
            "\u{0041}\u{0042}\u{0043}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         C@626,0|\
         D@1222,0|\
         E@1896,0|\
         A@2452,0"
    );
}

#[test]
fn morx_14_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFourteen.ttf",
            "\u{0041}\u{0042}\u{0043}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         C@626,0|\
         D@1222,0|\
         E@1896,0|\
         A@2452,0"
    );
}

#[test]
fn morx_14_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFourteen.ttf",
            "\u{0041}\u{0042}\u{0042}\u{0042}\u{0043}\u{0043}\u{0043}\u{0044}\u{0044}\u{0044}\
             \u{0042}\u{0043}\u{0044}\u{0043}\u{0045}",
            "",
        ),
        "B=0+626|\
         B=0+626|\
         B=0+626|\
         C=0+596|\
         C=0+596|\
         C=0+596|\
         D=0+674|\
         D=0+674|\
         D=0+674|\
         B=0+626|\
         C=0+596|\
         D=0+674|\
         C=0+596|\
         E=0+556|\
         A=0+639"
    );
}

#[test]
fn morx_16_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXSixteen.ttf",
            "\u{0041}\u{0042}\u{0043}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         C@626,0|\
         D@1222,0|\
         E@1896,0|\
         A@2452,0"
    );
}

#[test]
fn morx_17_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXSeventeen.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         A@626,0"
    );
}

#[test]
fn morx_18_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEighteen.ttf",
            "\u{0041}\u{0042}\u{0043}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B.alt@639,0|\
         C@1639,0|\
         D.alt1@2235,0|\
         E@3235,0"
    );
}

#[test]
fn morx_18_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEighteen.ttf",
            "\u{0041}\u{0042}\u{0042}\u{0042}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@639,0|\
         B@1265,0|\
         B.alt@1891,0|\
         D.alt1@2891,0|\
         E@3891,0"
    );
}

#[test]
fn morx_18_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEighteen.ttf",
            "\u{0041}\u{0042}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B.alt@639,0|\
         D.alt1@1639,0|\
         E@2639,0"
    );
}

#[test]
fn morx_18_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEighteen.ttf",
            "\u{0041}\u{0042}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@639,0|\
         E@1265,0"
    );
}

#[test]
fn morx_19_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEighteen.ttf",
            "\u{0041}\u{0043}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A.alt|\
         C@1000,0|\
         D.alt1@1596,0|\
         E@2596,0"
    );
}

#[test]
fn morx_19_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEighteen.ttf",
            "\u{0044}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "D.alt"
    );
}

#[test]
fn morx_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{24FF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         A@1254,0|\
         B@2084,0|\
         X@2914,0|\
         Y@3744,0|\
         Z@4574,0|\
         C@5404,0|\
         D@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         zero@8318,0"
    );
}

#[test]
fn morx_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{278A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         B@1254,0|\
         X@2084,0|\
         Y@2914,0|\
         Z@3744,0|\
         C@4574,0|\
         D@5404,0|\
         A@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         one@8318,0"
    );
}

#[test]
fn morx_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{278B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         D@1254,0|\
         A@2084,0|\
         B@2914,0|\
         X@3744,0|\
         Y@4574,0|\
         Z@5404,0|\
         C@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         two@8318,0"
    );
}

#[test]
fn morx_2_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{0033}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         D@1254,0|\
         B@2084,0|\
         X@2914,0|\
         Y@3744,0|\
         Z@4574,0|\
         C@5404,0|\
         A@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         three@8318,0"
    );
}

#[test]
fn morx_2_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{0034}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         X@1254,0|\
         Y@2084,0|\
         Z@2914,0|\
         C@3744,0|\
         D@4574,0|\
         A@5404,0|\
         B@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         four@8318,0"
    );
}

#[test]
fn morx_2_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{0035}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         X@1254,0|\
         Y@2084,0|\
         Z@2914,0|\
         C@3744,0|\
         D@4574,0|\
         B@5404,0|\
         A@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         five@8318,0"
    );
}

#[test]
fn morx_2_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{0036}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         C@1254,0|\
         D@2084,0|\
         A@2914,0|\
         B@3744,0|\
         X@4574,0|\
         Y@5404,0|\
         Z@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         six@8318,0"
    );
}

#[test]
fn morx_2_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{0037}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         D@1254,0|\
         C@2084,0|\
         A@2914,0|\
         B@3744,0|\
         X@4574,0|\
         Y@5404,0|\
         Z@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         seven@8318,0"
    );
}

#[test]
fn morx_2_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{0038}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         C@1254,0|\
         D@2084,0|\
         B@2914,0|\
         X@3744,0|\
         Y@4574,0|\
         Z@5404,0|\
         A@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         eight@8318,0"
    );
}

#[test]
fn morx_2_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{0039}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         D@1254,0|\
         C@2084,0|\
         B@2914,0|\
         X@3744,0|\
         Y@4574,0|\
         Z@5404,0|\
         A@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         nine@8318,0"
    );
}

#[test]
fn morx_2_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{2793}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         D@1254,0|\
         X@2084,0|\
         Y@2914,0|\
         Z@3744,0|\
         C@4574,0|\
         A@5404,0|\
         B@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         one_zero@8318,0"
    );
}

#[test]
fn morx_2_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{24EB}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         D@1254,0|\
         X@2084,0|\
         Y@2914,0|\
         Z@3744,0|\
         C@4574,0|\
         B@5404,0|\
         A@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         one_one@8318,0"
    );
}

#[test]
fn morx_2_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{24EC}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         C@1254,0|\
         D@2084,0|\
         X@2914,0|\
         Y@3744,0|\
         Z@4574,0|\
         A@5404,0|\
         B@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         one_two@8318,0"
    );
}

#[test]
fn morx_2_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{24ED}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         C@1254,0|\
         D@2084,0|\
         X@2914,0|\
         Y@3744,0|\
         Z@4574,0|\
         B@5404,0|\
         A@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         one_three@8318,0"
    );
}

#[test]
fn morx_2_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{24EE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         D@1254,0|\
         C@2084,0|\
         X@2914,0|\
         Y@3744,0|\
         Z@4574,0|\
         A@5404,0|\
         B@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         one_four@8318,0"
    );
}

#[test]
fn morx_2_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{004F}\u{004F}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0043}\u{0044}\
             \u{004F}\u{004F}\u{004F}\u{24EF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "O|\
         O@418,0|\
         O@836,0|\
         D@1254,0|\
         C@2084,0|\
         X@2914,0|\
         Y@3744,0|\
         Z@4574,0|\
         B@5404,0|\
         A@6234,0|\
         O@7064,0|\
         O@7482,0|\
         O@7900,0|\
         one_five@8318,0"
    );
}

#[test]
fn morx_20_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwenty.ttf",
            "\u{0041}\u{0042}\u{0043}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@639,0|\
         C.alt@1265,0|\
         D@2265,0|\
         E.alt1@2939,0"
    );
}

#[test]
fn morx_20_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwenty.ttf",
            "\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@639,0|\
         C.alt@1265,0"
    );
}

#[test]
fn morx_20_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwenty.ttf",
            "\u{0041}\u{0042}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B.alt@639,0|\
         E.alt1@1639,0"
    );
}

#[test]
fn morx_20_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwenty.ttf",
            "\u{0041}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A.alt|\
         E.alt1@1000,0"
    );
}

#[test]
fn morx_20_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwenty.ttf",
            "\u{0045}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "E|\
         E@556,0"
    );
}

#[test]
fn morx_20_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwenty.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A.alt"
    );
}

#[test]
fn morx_20_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwenty.ttf",
            "\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "E"
    );
}

#[test]
fn morx_21_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyone.ttf",
            "\u{0041}\u{0042}\u{0043}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B.alt@639,0|\
         C@1639,0|\
         D@2235,0|\
         E@2909,0"
    );
}

#[test]
fn morx_22_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentytwo.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "C"
    );
}

#[test]
fn morx_23_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentythree.ttf",
            "\u{0041}\u{0042}\u{0043}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "E|\
         E@556,0|\
         E@1112,0|\
         E@1668,0|\
         E@2224,0"
    );
}

#[test]
fn morx_24_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfour.ttf",
            "\u{0041}\u{0042}\u{0043}\u{0044}\u{0045}",
            "",
        ),
        "A=0+639|\
         C=1+596|\
         D=2+674|\
         E=3+556|\
         A=4+639"
    );
}

#[test]
fn morx_25_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfive.ttf",
            "\u{0041}\u{0042}\u{0043}\u{0044}\u{0045}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A.alt|\
         B.alt@1000,0|\
         C.alt@2000,0|\
         D.alt@3000,0|\
         E.alt@4000,0"
    );
}

#[test]
fn morx_25_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfive.ttf",
            "\u{0045}\u{0042}\u{0043}\u{0044}\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "E|\
         B@556,0|\
         C@1182,0|\
         D@1778,0|\
         A@2452,0"
    );
}

#[test]
fn morx_25_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfive.ttf",
            "\u{0043}\u{0042}\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "C|\
         B@596,0|\
         A.alt@1222,0|\
         B.alt@2222,0|\
         C.alt@3222,0"
    );
}

#[test]
fn morx_25_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfive.ttf",
            "\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A.alt|\
         B.alt@1000,0|\
         C.alt@2000,0"
    );
}

#[test]
fn morx_25_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfive.ttf",
            "\u{0043}\u{0042}\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "C|\
         B@596,0|\
         A@1222,0"
    );
}

#[test]
fn morx_25_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfive.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A.alt|\
         B.alt@1000,0"
    );
}

#[test]
fn morx_25_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfive.ttf",
            "\u{0042}\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         A@626,0"
    );
}

#[test]
fn morx_25_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfive.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A"
    );
}

#[test]
fn morx_25_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyfive.ttf",
            "\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B"
    );
}

#[test]
fn morx_26_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentysix.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@639,0"
    );
}

#[test]
fn morx_26_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentysix.ttf",
            "\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B.alt"
    );
}

#[test]
fn morx_27_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyseven.ttf",
            "\u{0041}\u{0045}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A_E_B"
    );
}

#[test]
fn morx_27_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyseven.ttf",
            "\u{0041}\u{0045}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A_E_C"
    );
}

#[test]
fn morx_27_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyseven.ttf",
            "\u{0041}\u{0045}\u{0044}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A_E_D"
    );
}

#[test]
fn morx_28_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyeight.ttf",
            "\u{0041}\u{0045}\u{0044}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A_E_D"
    );
}

#[test]
fn morx_28_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyeight.ttf",
            "\u{0041}\u{0078}\u{0045}\u{0044}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A_E_D|\
         x@1394,0"
    );
}

#[test]
fn morx_28_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyeight.ttf",
            "\u{0041}\u{0045}\u{0079}\u{0044}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A_E_D|\
         y@1394,0"
    );
}

#[test]
fn morx_28_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyeight.ttf",
            "\u{0041}\u{0078}\u{0045}\u{0079}\u{0044}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A_E_D|\
         x@1394,0|\
         y@1923,0"
    );
}

#[test]
fn morx_28_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwentyeight.ttf",
            "\u{0041}\u{0078}\u{0078}\u{0078}\u{0045}\u{0079}\u{0079}\u{0079}\u{0044}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A_E_D|\
         x@1394,0|\
         x@1923,0|\
         x@2452,0|\
         y@2981,0|\
         y@3491,0|\
         y@4001,0"
    );
}

#[test]
fn morx_3_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0030}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         zero@1793,0"
    );
}

#[test]
fn morx_3_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0031}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         one@1793,0"
    );
}

#[test]
fn morx_3_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0032}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         two@1793,0"
    );
}

#[test]
fn morx_3_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0033}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         three@1793,0"
    );
}

#[test]
fn morx_3_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0034}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         four@1793,0"
    );
}

#[test]
fn morx_3_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0035}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         five@1793,0"
    );
}

#[test]
fn morx_3_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0036}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         six@1793,0"
    );
}

#[test]
fn morx_3_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0037}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         seven@1793,0"
    );
}

#[test]
fn morx_3_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0038}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         eight@1793,0"
    );
}

#[test]
fn morx_3_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{0039}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         nine@1793,0"
    );
}

#[test]
fn morx_3_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{2793}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         one_zero@1793,0"
    );
}

#[test]
fn morx_3_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{24EB}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         one_one@1793,0"
    );
}

#[test]
fn morx_3_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{24EC}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         one_two@1793,0"
    );
}

#[test]
fn morx_3_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{24ED}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         one_three@1793,0"
    );
}

#[test]
fn morx_3_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{24EE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         one_four@1793,0"
    );
}

#[test]
fn morx_3_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThree.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0043}\u{0044}\u{24EF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@363,0|\
         X@722,0|\
         C@1086,0|\
         D@1402,0|\
         one_five@1793,0"
    );
}

#[test]
fn morx_31_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyone.ttf",
            "\u{0058}\u{0058}\u{0041}\u{0059}\u{0059}\u{0041}\u{005A}\u{005A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "I|\
         N@830,0|\
         I@1660,0|\
         N@2490,0|\
         S@3320,0|\
         S@4150,0|\
         X@4980,0|\
         X@5344,0|\
         A@5708,0|\
         Y@6538,0|\
         Y@6870,0|\
         A@7202,0|\
         Z@8032,0|\
         Z@8354,0"
    );
}

#[test]
fn morx_31_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyone.ttf",
            "\u{0058}\u{0058}\u{0041}\u{0059}\u{0059}\u{0042}\u{0059}\u{0059}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "I|\
         N@830,0|\
         S@1660,0|\
         I@2490,0|\
         N@3320,0|\
         S@4150,0|\
         X@4980,0|\
         X@5344,0|\
         A@5708,0|\
         Y@6538,0|\
         Y@6870,0|\
         B@7202,0|\
         Y@8032,0|\
         Y@8364,0"
    );
}

#[test]
fn morx_31_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyone.ttf",
            "\u{0058}\u{0058}\u{0042}\u{0059}\u{0059}\u{0041}\u{005A}\u{005A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "X|\
         I@364,0|\
         I@1194,0|\
         N@2024,0|\
         S@2854,0|\
         N@3684,0|\
         S@4514,0|\
         X@5344,0|\
         B@5708,0|\
         Y@6538,0|\
         Y@6870,0|\
         A@7202,0|\
         Z@8032,0|\
         Z@8354,0"
    );
}

#[test]
fn morx_31_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyone.ttf",
            "\u{0058}\u{0058}\u{0042}\u{0059}\u{0059}\u{0042}\u{005A}\u{005A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "X|\
         I@364,0|\
         N@1194,0|\
         I@2024,0|\
         N@2854,0|\
         S@3684,0|\
         S@4514,0|\
         X@5344,0|\
         B@5708,0|\
         Y@6538,0|\
         Y@6870,0|\
         B@7202,0|\
         Z@8032,0|\
         Z@8354,0"
    );
}

#[test]
fn morx_31_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyone.ttf",
            "\u{004D}\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "I|\
         N@830,0|\
         S@1660,0|\
         M@2490,0|\
         I@3320,0|\
         N@4150,0|\
         S@4980,0|\
         P@5810,0|\
         Q@6143,0|\
         R@6509,0|\
         A@6860,0|\
         X@7690,0|\
         Y@8054,0|\
         Z@8386,0|\
         A@8708,0"
    );
}

#[test]
fn morx_31_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyone.ttf",
            "\u{004D}\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "I|\
         N@830,0|\
         S@1660,0|\
         M@2490,0|\
         P@3320,0|\
         I@3653,0|\
         N@4483,0|\
         S@5313,0|\
         Q@6143,0|\
         R@6509,0|\
         A@6860,0|\
         X@7690,0|\
         Y@8054,0|\
         Z@8386,0|\
         B@8708,0"
    );
}

#[test]
fn morx_31_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyone.ttf",
            "\u{004D}\u{0050}\u{0051}\u{0052}\u{0042}\u{0058}\u{0059}\u{005A}\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "M|\
         I@830,0|\
         N@1660,0|\
         S@2490,0|\
         I@3320,0|\
         N@4150,0|\
         S@4980,0|\
         P@5810,0|\
         Q@6143,0|\
         R@6509,0|\
         B@6860,0|\
         X@7690,0|\
         Y@8054,0|\
         Z@8386,0|\
         A@8708,0"
    );
}

#[test]
fn morx_31_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyone.ttf",
            "\u{004D}\u{0050}\u{0051}\u{0052}\u{0042}\u{0058}\u{0059}\u{005A}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "M|\
         I@830,0|\
         N@1660,0|\
         S@2490,0|\
         P@3320,0|\
         I@3653,0|\
         N@4483,0|\
         S@5313,0|\
         Q@6143,0|\
         R@6509,0|\
         B@6860,0|\
         X@7690,0|\
         Y@8054,0|\
         Z@8386,0|\
         B@8708,0"
    );
}

#[test]
fn morx_32_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtytwo.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "I|\
         N@830,0|\
         S@1660,0|\
         A@2490,0"
    );
}

#[test]
fn morx_32_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtytwo.ttf",
            "\u{0058}\u{0041}\u{0059}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "I|\
         N@830,0|\
         S@1660,0|\
         X@2490,0|\
         A@2854,0|\
         Y@3684,0"
    );
}

#[test]
fn morx_32_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtytwo.ttf",
            "\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         I@830,0|\
         N@1660,0|\
         S@2490,0"
    );
}

#[test]
fn morx_32_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtytwo.ttf",
            "\u{0058}\u{0042}\u{0059}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "X|\
         I@364,0|\
         N@1194,0|\
         S@2024,0|\
         B@2854,0|\
         Y@3684,0"
    );
}

#[test]
fn morx_33_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtythree.ttf",
            "\u{0068}\u{0061}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "h|\
         a@618,0|\
         h@1179,0|\
         a@1797,0"
    );
}

#[test]
fn morx_33_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtythree.ttf",
            "\u{0068}\u{0061}\u{0068}\u{0061}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "h|\
         a@618,0|\
         h@1179,0|\
         a@1797,0|\
         h@2358,0|\
         a@2976,0|\
         h@3537,0|\
         a@4155,0"
    );
}

#[test]
fn morx_33_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtythree.ttf",
            "\u{0061}\u{0068}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "a|\
         h@561,0"
    );
}

#[test]
fn morx_34_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyfour.ttf",
            "\u{0068}\u{0061}",
            "",
        ),
        "h=0+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561|\
         h=1+618|\
         a=1+561"
    );
}

#[test]
fn morx_35_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyfive.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@639,0|\
         C@1265,0|\
         E@1861,0"
    );
}

#[test]
fn morx_35_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyfive.ttf",
            "\u{0058}\u{0041}\u{0059}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "X|\
         A@586,0|\
         B@1225,0|\
         C@1851,0|\
         E@2447,0|\
         Y@3003,0"
    );
}

#[test]
fn morx_36_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtysix.ttf",
            "\u{0041}",
            "",
        ),
        "A=0+639|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626|\
         C=0+596|\
         B=0+626"
    );
}

#[test]
fn morx_37_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyseven.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A.alt|\
         B.alt@1000,0"
    );
}

#[test]
fn morx_37_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyseven.ttf",
            "\u{0042}\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         A@650,0"
    );
}

#[test]
fn morx_37_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyseven.ttf",
            "\u{05D0}\u{05D1}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni05D1|\
         uni05D0@542,0"
    );
}

#[test]
fn morx_37_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyseven.ttf",
            "\u{05D1}\u{05D0}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni05D0.alt|\
         uni05D1.alt@1000,0"
    );
}

#[test]
fn morx_38_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyeight.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A.alt|\
         B.alt@1000,0"
    );
}

#[test]
fn morx_38_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyeight.ttf",
            "\u{0042}\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         A@650,0"
    );
}

#[test]
fn morx_38_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyeight.ttf",
            "\u{05D0}\u{05D1}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni05D1.alt|\
         uni05D0.alt@1000,0"
    );
}

#[test]
fn morx_38_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtyeight.ttf",
            "\u{05D1}\u{05D0}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni05D0|\
         uni05D1@606,0"
    );
}

#[test]
fn morx_39_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtynine.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@639,0"
    );
}

#[test]
fn morx_39_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtynine.ttf",
            "\u{0042}\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B.alt|\
         A.alt@1000,0"
    );
}

#[test]
fn morx_39_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtynine.ttf",
            "\u{05D0}\u{05D1}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni05D1.alt|\
         uni05D0.alt@1000,0"
    );
}

#[test]
fn morx_39_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXThirtynine.ttf",
            "\u{05D1}\u{05D0}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni05D0|\
         uni05D1@606,0"
    );
}

#[test]
fn morx_4_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0031}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         one@2898,0"
    );
}

#[test]
fn morx_4_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0032}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         two@2898,0"
    );
}

#[test]
fn morx_4_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0044}\u{0058}\u{0059}\u{005A}\u{0033}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         D@1050,0|\
         A@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         three@3728,0"
    );
}

#[test]
fn morx_4_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0034}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         four@3728,0"
    );
}

#[test]
fn morx_4_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0035}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         B@1050,0|\
         A@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         five@3728,0"
    );
}

#[test]
fn morx_4_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0036}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         six@3728,0"
    );
}

#[test]
fn morx_4_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0037}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         B@1050,0|\
         A@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         seven@3728,0"
    );
}

#[test]
fn morx_4_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0043}\u{0044}\u{0058}\u{0059}\u{005A}\u{0038}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         C@1050,0|\
         D@1880,0|\
         A@2710,0|\
         X@3540,0|\
         Y@3904,0|\
         Z@4236,0|\
         eight@4558,0"
    );
}

#[test]
fn morx_4_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0043}\u{0044}\u{0058}\u{0059}\u{005A}\u{0039}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         D@1050,0|\
         C@1880,0|\
         A@2710,0|\
         X@3540,0|\
         Y@3904,0|\
         Z@4236,0|\
         nine@4558,0"
    );
}

#[test]
fn morx_4_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0044}\u{0058}\u{0059}\u{005A}\u{2793}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         D@1050,0|\
         A@1880,0|\
         B@2710,0|\
         X@3540,0|\
         Y@3904,0|\
         Z@4236,0|\
         one_zero@4558,0"
    );
}

#[test]
fn morx_4_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0044}\u{0058}\u{0059}\u{005A}\u{24EB}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         D@1050,0|\
         B@1880,0|\
         A@2710,0|\
         X@3540,0|\
         Y@3904,0|\
         Z@4236,0|\
         one_one@4558,0"
    );
}

#[test]
fn morx_4_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0043}\u{0044}\u{0058}\u{0059}\u{005A}\
             \u{24EC}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         C@1050,0|\
         D@1880,0|\
         A@2710,0|\
         B@3540,0|\
         X@4370,0|\
         Y@4734,0|\
         Z@5066,0|\
         one_two@5388,0"
    );
}

#[test]
fn morx_4_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0043}\u{0044}\u{0058}\u{0059}\u{005A}\
             \u{24ED}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         C@1050,0|\
         D@1880,0|\
         B@2710,0|\
         A@3540,0|\
         X@4370,0|\
         Y@4734,0|\
         Z@5066,0|\
         one_three@5388,0"
    );
}

#[test]
fn morx_4_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0043}\u{0044}\u{0058}\u{0059}\u{005A}\
             \u{24EE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         D@1050,0|\
         C@1880,0|\
         A@2710,0|\
         B@3540,0|\
         X@4370,0|\
         Y@4734,0|\
         Z@5066,0|\
         one_four@5388,0"
    );
}

#[test]
fn morx_4_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0043}\u{0044}\u{0058}\u{0059}\u{005A}\
             \u{24EF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         D@1050,0|\
         C@1880,0|\
         B@2710,0|\
         A@3540,0|\
         X@4370,0|\
         Y@4734,0|\
         Z@5066,0|\
         one_five@5388,0"
    );
}

#[test]
fn morx_40_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXForty.ttf",
            "\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A|\
         B@639,0"
    );
}

#[test]
fn morx_40_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXForty.ttf",
            "\u{0042}\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B.alt|\
         A.alt@1000,0"
    );
}

#[test]
fn morx_40_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXForty.ttf",
            "\u{05D0}\u{05D1}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni05D1|\
         uni05D0@542,0"
    );
}

#[test]
fn morx_40_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXForty.ttf",
            "\u{05D1}\u{05D0}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni05D0.alt|\
         uni05D1.alt@1000,0"
    );
}

#[test]
fn morx_41_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFourtyone.ttf",
            "\u{0061}\u{0063}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "a_c"
    );
}

#[test]
fn morx_41_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFourtyone.ttf",
            "\u{0062}\u{0063}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "b_c"
    );
}

#[test]
fn morx_41_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFourtyone.ttf",
            "\u{0063}\u{0063}",
            "",
        ),
        "c=0+480|\
         c=1+480"
    );
}

#[test]
fn morx_41_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFourtyone.ttf",
            "\u{0061}\u{0062}\u{0063}\u{0063}",
            "",
        ),
        "a=0+561|\
         b_c=1+1070|\
         c=3+480"
    );
}

#[test]
fn morx_5_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0033}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         three@2898,0"
    );
}

#[test]
fn morx_5_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0034}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         four@2898,0"
    );
}

#[test]
fn morx_5_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0035}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         five@2898,0"
    );
}

#[test]
fn morx_5_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0036}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         six@2898,0"
    );
}

#[test]
fn morx_5_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0037}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         seven@2898,0"
    );
}

#[test]
fn morx_5_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0038}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         eight@2898,0"
    );
}

#[test]
fn morx_5_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0038}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         eight@3728,0"
    );
}

#[test]
fn morx_5_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{0039}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         nine@2898,0"
    );
}

#[test]
fn morx_5_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{0039}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         nine@3728,0"
    );
}

#[test]
fn morx_5_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{2793}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         one_zero@2898,0"
    );
}

#[test]
fn morx_5_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{2793}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         one_zero@3728,0"
    );
}

#[test]
fn morx_5_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{24EB}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         one_one@2898,0"
    );
}

#[test]
fn morx_5_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{24EB}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         one_one@3728,0"
    );
}

#[test]
fn morx_5_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{24EC}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         one_two@2898,0"
    );
}

#[test]
fn morx_5_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{24EC}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         one_two@3728,0"
    );
}

#[test]
fn morx_5_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0043}\u{0058}\u{0059}\u{005A}\u{24EC}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         C@2710,0|\
         X@3540,0|\
         Y@3904,0|\
         Z@4236,0|\
         one_two@4558,0"
    );
}

#[test]
fn morx_5_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{24ED}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         one_three@2898,0"
    );
}

#[test]
fn morx_5_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{24ED}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         one_three@3728,0"
    );
}

#[test]
fn morx_5_019() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0043}\u{0058}\u{0059}\u{005A}\u{24ED}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         C@2710,0|\
         X@3540,0|\
         Y@3904,0|\
         Z@4236,0|\
         one_three@4558,0"
    );
}

#[test]
fn morx_5_020() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{24EE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         one_four@2898,0"
    );
}

#[test]
fn morx_5_021() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{24EE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         one_four@3728,0"
    );
}

#[test]
fn morx_5_022() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0043}\u{0058}\u{0059}\u{005A}\u{24EE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         C@2710,0|\
         X@3540,0|\
         Y@3904,0|\
         Z@4236,0|\
         one_four@4558,0"
    );
}

#[test]
fn morx_5_023() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0058}\u{0059}\u{005A}\u{24EF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         X@1880,0|\
         Y@2244,0|\
         Z@2576,0|\
         one_five@2898,0"
    );
}

#[test]
fn morx_5_024() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0058}\u{0059}\u{005A}\u{24EF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         X@2710,0|\
         Y@3074,0|\
         Z@3406,0|\
         one_five@3728,0"
    );
}

#[test]
fn morx_5_025() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXFour.ttf",
            "\u{0050}\u{0051}\u{0052}\u{0041}\u{0042}\u{0043}\u{0058}\u{0059}\u{005A}\u{24EF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "P|\
         Q@333,0|\
         R@699,0|\
         A@1050,0|\
         B@1880,0|\
         C@2710,0|\
         X@3540,0|\
         Y@3904,0|\
         Z@4236,0|\
         one_five@4558,0"
    );
}

#[test]
fn morx_7_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXTwo.ttf",
            "\u{004F}\u{0042}\u{0043}\u{0044}\u{0031}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         C@830,0|\
         D@1660,0|\
         O@2490,0|\
         one@2908,0"
    );
}

#[test]
fn morx_8_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEight.ttf",
            "\u{0030}\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "zero|\
         A@914,0|\
         B@1552,0|\
         C@2202,0"
    );
}

#[test]
fn morx_8_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEight.ttf",
            "\u{0031}\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "one|\
         B@914,0|\
         C@1564,0|\
         A@2196,0"
    );
}

#[test]
fn morx_8_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXEight.ttf",
            "\u{0032}\u{0041}\u{0042}\u{0043}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "two|\
         C@914,0|\
         A@1546,0|\
         B@2184,0"
    );
}

#[test]
fn morx_9_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestMORXNine.ttf",
            "\u{0041}\u{0042}\u{0058}\u{0041}\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B|\
         A@650,0|\
         X@1288,0|\
         A@1874,0|\
         B@2512,0"
    );
}

#[test]
fn sfnt_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestSFNTOne.otf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A"
    );
}

#[test]
fn sfnt_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestSFNTOne.otf",
            "\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B"
    );
}

#[test]
fn sfnt_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestSFNTTwo.ttf",
            "\u{0041}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "A"
    );
}

#[test]
fn sfnt_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestSFNTTwo.ttf",
            "\u{0042}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "B"
    );
}

#[test]
fn sharan_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeAran.ttf",
            "\u{0644}\u{0633}\u{0627}\u{0646}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "OneDotEnclNS@398,-1|\
         NoonxSep|\
         AlefFin@861,0|\
         SeenMed.inT2outT1@1125,0|\
         sp0@1664,0|\
         LamIni.outT2@1664,223"
    );
}

#[test]
fn shbali_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B38}\u{1B00}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid60@1113,0|\
         gid4@1064,0"
    );
}

#[test]
fn shbali_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B15}\u{1B44}\u{1B16}\u{1B02}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid25|\
         gid132@1092,0|\
         gid6@942,0"
    );
}

#[test]
fn shbali_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B18}\u{1B3B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid28|\
         gid62@796,0|\
         gid57@794,0"
    );
}

#[test]
fn shbali_1_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B19}\u{1B40}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid29@483,0|\
         gid57@1535,0"
    );
}

#[test]
fn shbali_1_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B1A}\u{1B3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid67|\
         gid30@483,0"
    );
}

#[test]
fn shbali_1_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B14}\u{1B36}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid24|\
         gid58@828,0"
    );
}

#[test]
fn shbali_1_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B13}\u{1B01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid129@1111,0|\
         gid5@1064,0"
    );
}

#[test]
fn shbali_1_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B1B}\u{1B01}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid137@1111,0|\
         gid5@1380,181"
    );
}

#[test]
fn shbali_1_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B26}\u{1B03}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid148@1111,0|\
         gid7@991,0"
    );
}

#[test]
fn shbali_1_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B13}\u{1B38}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid129@1111,0|\
         gid60@1111,-488"
    );
}

#[test]
fn shbali_1_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B13}\u{1B3C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid129@1111,0|\
         gid70@1128,0|\
         gid170@1113,0"
    );
}

#[test]
fn shbali_1_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B13}\u{1B3D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid129@1111,0|\
         gid70@1128,0|\
         gid170@1113,0|\
         gid57@1110,0"
    );
}

#[test]
fn shbali_1_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0"
    );
}

#[test]
fn shbali_1_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B36}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid58@1064,0|\
         gid66@1110,0|\
         gid128@1593,0"
    );
}

#[test]
fn shbali_1_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B38}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid60@1113,0|\
         gid66@1110,0|\
         gid128@1593,0"
    );
}

#[test]
fn shbali_1_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B15}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid131@1594,0"
    );
}

#[test]
fn shbali_1_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B40}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid57@1593,0"
    );
}

#[test]
fn shbali_1_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0"
    );
}

#[test]
fn shbali_1_019() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B3E}\u{1B36}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid58@1547,0"
    );
}

#[test]
fn shbali_1_020() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B3E}\u{1B38}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid60@1596,0"
    );
}

#[test]
fn shbali_1_021() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B15}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid131@1594,0"
    );
}

#[test]
fn shbali_1_022() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B40}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid57@1593,0"
    );
}

#[test]
fn shbali_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B27}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid149@1593,0"
    );
}

#[test]
fn shbali_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B28}\u{1B3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid67|\
         gid23@483,0|\
         gid150@1593,0"
    );
}

#[test]
fn shbali_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B31}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid159@1593,0"
    );
}

#[test]
fn shbali_2_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B32}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid60@1596,0|\
         gid149@1593,0"
    );
}

#[test]
fn shbali_2_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B4A}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid23@483,0|\
         gid60@1596,0|\
         gid165@1593,0"
    );
}

#[test]
fn shbali_2_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B1B}\u{1B44}\u{1B13}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid181|\
         gid129@1064,-195"
    );
}

#[test]
fn shbali_2_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B1B}\u{1B44}\u{1B13}\u{1B3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid66|\
         gid181@483,0|\
         gid129@1547,-195"
    );
}

#[test]
fn shbali_2_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B1B}\u{1B44}\u{1B13}\u{1B38}\u{1B00}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid181|\
         gid129@1064,-195|\
         gid60@1064,-683|\
         gid4@855,0"
    );
}

#[test]
fn shbali_2_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B13}\u{1B38}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid129@1111,0|\
         gid60@1111,-488"
    );
}

#[test]
fn shbali_2_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B1B}\u{1B39}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid137@1111,0|\
         gid61@1261,-488"
    );
}

#[test]
fn shbali_2_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B31}\u{1B3A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid159@1110,0|\
         gid62@1752,0"
    );
}

#[test]
fn shbali_2_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B13}\u{1B44}\u{1B45}\u{1B38}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid23|\
         gid162@1111,0|\
         gid60@1111,-488"
    );
}

#[test]
fn shbali_3_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B66}\u{1B6B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid102|\
         gid107@560,-10"
    );
}

#[test]
fn shbali_3_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B66}\u{1B6C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid102|\
         gid108@573,49"
    );
}

#[test]
fn shbali_3_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B66}\u{1B6D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid102|\
         gid109@652,-10"
    );
}

#[test]
fn shbali_3_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B66}\u{1B6E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid102|\
         gid110@652,-98"
    );
}

#[test]
fn shbali_3_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B66}\u{1B6F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid102|\
         gid111@667,-10"
    );
}

#[test]
fn shbali_3_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B66}\u{1B70}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid102|\
         gid112@667,-10"
    );
}

#[test]
fn shbali_3_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B66}\u{1B71}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid102|\
         gid113@667,-10"
    );
}

#[test]
fn shbali_3_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B66}\u{1B72}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid102|\
         gid114@667,-10"
    );
}

#[test]
fn shbali_3_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansBalinese-Regular.ttf",
            "\u{1B66}\u{1B73}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid102|\
         gid115@599,-10"
    );
}

#[test]
fn shknda_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CB2}\u{0CCD}\u{0CB2}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knLI|\
         knLAc2@756,0"
    );
}

#[test]
fn shknda_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0C9F}\u{0CCD}\u{0CB8}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knTT|\
         knSAc2@1021,0"
    );
}

#[test]
fn shknda_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CB3}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knLLI"
    );
}

#[test]
fn shknda_1_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA1}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knDDI"
    );
}

#[test]
fn shknda_1_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CAE}\u{0CC6}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knME"
    );
}

#[test]
fn shknda_1_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CB0}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knRI"
    );
}

#[test]
fn shknda_1_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0C96}\u{0CCD}\u{0CAF}\u{0CC6}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knKHE|\
         knYAc2@846,0"
    );
}

#[test]
fn shknda_1_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CAB}\u{0CCD}\u{0CB0}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knPHI|\
         knRAc2@734,0"
    );
}

#[test]
fn shknda_1_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA8}\u{0CC6}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knNE"
    );
}

#[test]
fn shknda_1_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0C97}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knGI"
    );
}

#[test]
fn shknda_1_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CB7}\u{0CCD}\u{0C9F}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knSSI|\
         knTTAc2@746,0"
    );
}

#[test]
fn shknda_1_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CAF}\u{0CBF}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knYI|\
         knAnusvara@1251,0"
    );
}

#[test]
fn shknda_1_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0C9A}\u{0CC0}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knCI|\
         knLengthmark@766,0"
    );
}

#[test]
fn shknda_1_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA8}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knNI"
    );
}

#[test]
fn shknda_1_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0C97}\u{0CCD}\u{0CB2}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knGI|\
         knLAc2@620,0"
    );
}

#[test]
fn shknda_1_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CB7}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knSSI"
    );
}

#[test]
fn shknda_1_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0C97}\u{0CC6}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knGE"
    );
}

#[test]
fn shknda_1_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA6}\u{0CCD}\u{0CB5}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knDI|\
         knVAc2@740,0"
    );
}

#[test]
fn shknda_1_019() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA4}\u{0CC0}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knTI|\
         knLengthmark@612,0"
    );
}

#[test]
fn shknda_1_020() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CAE}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knMI"
    );
}

#[test]
fn shknda_1_021() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CB2}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knLI"
    );
}

#[test]
fn shknda_1_022() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0C97}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knGI"
    );
}

#[test]
fn shknda_1_023() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA8}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knN"
    );
}

#[test]
fn shknda_1_024() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CAC}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knBI"
    );
}

#[test]
fn shknda_1_025() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CB2}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knLI"
    );
}

#[test]
fn shknda_1_026() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA8}\u{0CCD}\u{0CA8}\u{0CBF}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knNI|\
         knNAc2@678,0|\
         knAnusvara@755,0"
    );
}

#[test]
fn shknda_1_027() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CB2}\u{0CCD}\u{0CB2}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knLI|\
         knLAc2@756,0"
    );
}

#[test]
fn shknda_1_028() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA7}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knDHI"
    );
}

#[test]
fn shknda_1_029() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CAA}\u{0CCC}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knPA.base|\
         knmAU@739,0"
    );
}

#[test]
fn shknda_1_030() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CB5}\u{0CBF}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knVI|\
         knAnusvara@748,0"
    );
}

#[test]
fn shknda_1_031() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA1}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knDDI"
    );
}

#[test]
fn shknda_1_032() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0C9F}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knTTI"
    );
}

#[test]
fn shknda_1_033() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA8}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knNI"
    );
}

#[test]
fn shknda_1_034() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSerifKannada-Regular.ttf",
            "\u{0CA7}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "knDHI"
    );
}

#[test]
fn shknda_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA8}\u{0CCD}\u{0CA8}\u{0CBE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid150|\
         gid57@710,0|\
         gid116@1158,0"
    );
}

#[test]
fn shknda_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA8}\u{0CCD}\u{0CA8}\u{0CBE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid150|\
         gid57@710,0|\
         gid116@1158,0"
    );
}

#[test]
fn shknda_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA4}\u{0CCD}\u{0CA4}\u{0CBE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid146|\
         gid57@622,0|\
         gid112@1070,0"
    );
}

#[test]
fn shknda_2_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9F}\u{0CCD}\u{0C9F}\u{0CBE}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid141|\
         gid57@814,0|\
         gid107@1262,0"
    );
}

#[test]
fn shknda_2_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA1}\u{0CCB}\u{0C82}\u{0C97}\u{0CBF}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid249|\
         gid61@768,0|\
         gid71@1513,0|\
         gid4@1924,0|\
         gid207@2474,0"
    );
}

#[test]
fn shknda_2_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9C}\u{0CBF}\u{0CBC}\u{0CD5}\u{0CAC}\u{0CC6}\u{0CA8}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid211|\
         gid55@652,0|\
         gid71@776,0|\
         gid259@1187,0|\
         gid186@1993,0"
    );
}

#[test]
fn shknda_2_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9C}\u{0CBE}\u{0CBC}\u{0C95}\u{0CBF}\u{0CB0}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid139|\
         gid57@776,0|\
         gid55@652,0|\
         gid205@1224,0|\
         gid193@1798,0"
    );
}

#[test]
fn shknda_2_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C87}\u{0CA8}\u{0CCD}\u{0CAB}\u{0CCD}\u{0CB2}\u{0CC6}\u{0C95}\u{0CCD}\u{0CB7}\
             \u{0CA8}\u{0CB2}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid8|\
         gid256@711,0|\
         gid118@1421,0|\
         gid335@1590,0|\
         gid282@1976,0|\
         gid39@2550,0|\
         gid195@3260,0"
    );
}

#[test]
fn shknda_2_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C87}\u{0CA8}\u{0CCD}\u{0CAB}\u{0CCD}\u{0CB2}\u{0CC6}\u{0C95}\u{0CCD}\u{0CB7}\
             \u{0CA8}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid8|\
         gid256@711,0|\
         gid118@1421,0|\
         gid335@1590,0|\
         gid282@1976,0|\
         gid186@2550,0"
    );
}

#[test]
fn shknda_2_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA6}\u{0C9F}\u{0CCD}\u{0CB8}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid37|\
         gid177@764,0|\
         gid130@1812,0"
    );
}

#[test]
fn shknda_2_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C8E}\u{0C95}\u{0CCD}\u{0CB8}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid14|\
         gid167@787,0|\
         gid130@1594,0"
    );
}

#[test]
fn shknda_2_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CAE}\u{0CBE}\u{0CB0}\u{0CCD}\u{0C9A}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid155|\
         gid57@1155,0|\
         gid172@1603,0|\
         gid94@2716,0"
    );
}

#[test]
fn shknda_2_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9F}\u{0CC6}\u{0C95}\u{0CCD}\u{0CB8}\u{0CCD}\u{0C9F}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid247|\
         gid167@814,0|\
         gid130@1621,0|\
         gid317@1790,0"
    );
}

#[test]
fn shknda_2_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CAC}\u{0CC1}\u{0C95}\u{0CCD}\u{0CB8}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid42|\
         gid60@801,0|\
         gid167@1164,0|\
         gid130@1971,0"
    );
}

#[test]
fn shknda_2_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CB8}\u{0CBE}\u{0CAB}\u{0CCD}\u{0C9F}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid163|\
         gid57@708,0|\
         gid188@1156,0|\
         gid107@2181,0"
    );
}

#[test]
fn shknda_2_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9C}\u{0CB8}\u{0CCD}\u{0C9F}\u{0CCD}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid27|\
         gid200@776,0|\
         gid107@1718,0"
    );
}

#[test]
fn shknda_3_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C95}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid239|\
         gid61@574,0|\
         gid71@1319,0|\
         gid4@1730,0"
    );
}

#[test]
fn shknda_3_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C96}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid240|\
         gid61@865,0|\
         gid71@1610,0|\
         gid4@2021,0"
    );
}

#[test]
fn shknda_3_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C97}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid241|\
         gid61@647,0|\
         gid71@1392,0|\
         gid4@1803,0"
    );
}

#[test]
fn shknda_3_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C98}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid242|\
         gid279@996,0|\
         gid71@1741,0|\
         gid4@2152,0"
    );
}

#[test]
fn shknda_3_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C99}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid24|\
         gid67@736,0|\
         gid71@1716,0|\
         gid4@2127,0"
    );
}

#[test]
fn shknda_3_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9A}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid243|\
         gid61@794,0|\
         gid71@1539,0|\
         gid4@1950,0"
    );
}

#[test]
fn shknda_3_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9B}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid244|\
         gid61@843,0|\
         gid71@1588,0|\
         gid4@1999,0"
    );
}

#[test]
fn shknda_3_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9C}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid245|\
         gid61@776,0|\
         gid71@1521,0|\
         gid4@1932,0"
    );
}

#[test]
fn shknda_3_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9D}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid246|\
         gid61@1378,0|\
         gid71@2123,0|\
         gid4@2534,0"
    );
}

#[test]
fn shknda_3_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9E}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid29|\
         gid67@967,0|\
         gid71@1947,0|\
         gid4@2358,0"
    );
}

#[test]
fn shknda_3_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0C9F}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid247|\
         gid61@814,0|\
         gid71@1559,0|\
         gid4@1970,0"
    );
}

#[test]
fn shknda_3_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA0}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid248|\
         gid61@651,0|\
         gid71@1396,0|\
         gid4@1807,0"
    );
}

#[test]
fn shknda_3_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA1}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid249|\
         gid61@768,0|\
         gid71@1513,0|\
         gid4@1924,0"
    );
}

#[test]
fn shknda_3_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA2}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid250|\
         gid61@768,0|\
         gid71@1513,0|\
         gid4@1924,0"
    );
}

#[test]
fn shknda_3_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA3}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid251|\
         gid61@866,0|\
         gid71@1611,0|\
         gid4@2022,0"
    );
}

#[test]
fn shknda_3_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA4}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid252|\
         gid61@622,0|\
         gid71@1367,0|\
         gid4@1778,0"
    );
}

#[test]
fn shknda_3_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA5}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid253|\
         gid61@764,0|\
         gid71@1509,0|\
         gid4@1920,0"
    );
}

#[test]
fn shknda_3_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA6}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid254|\
         gid61@764,0|\
         gid71@1509,0|\
         gid4@1920,0"
    );
}

#[test]
fn shknda_3_019() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA7}\u{0CCB}\u{0C82}\u{0020}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid255|\
         gid61@764,0|\
         gid71@1509,0|\
         gid4@1920,0|\
         gid3@2470,0"
    );
}

#[test]
fn shknda_3_020() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CA8}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid256|\
         gid61@710,0|\
         gid71@1455,0|\
         gid4@1866,0"
    );
}

#[test]
fn shknda_3_021() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CAA}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid257|\
         gid275@791,0|\
         gid71@1433,0|\
         gid4@1844,0"
    );
}

#[test]
fn shknda_3_022() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CAB}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid258|\
         gid277@791,0|\
         gid71@1433,0|\
         gid4@1844,0"
    );
}

#[test]
fn shknda_3_023() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CAC}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid259|\
         gid61@806,0|\
         gid71@1551,0|\
         gid4@1962,0"
    );
}

#[test]
fn shknda_3_024() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CAD}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid260|\
         gid61@806,0|\
         gid71@1551,0|\
         gid4@1962,0"
    );
}

#[test]
fn shknda_3_025() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CAE}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid280|\
         gid71@1539,0|\
         gid4@1950,0"
    );
}

#[test]
fn shknda_3_026() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CAF}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid281|\
         gid71@1711,0|\
         gid4@2122,0"
    );
}

#[test]
fn shknda_3_027() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CB0}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid263|\
         gid61@651,0|\
         gid71@1396,0|\
         gid4@1807,0"
    );
}

#[test]
fn shknda_3_028() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CB1}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid47|\
         gid67@830,0|\
         gid71@1810,0|\
         gid4@2221,0"
    );
}

#[test]
fn shknda_3_029() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CB2}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid264|\
         gid61@768,0|\
         gid71@1513,0|\
         gid4@1924,0"
    );
}

#[test]
fn shknda_3_030() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/NotoSansKannada-Regular.ttf",
            "\u{0CB5}\u{0CCB}\u{0C82}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "gid266|\
         gid275@793,0|\
         gid71@1435,0|\
         gid4@1846,0"
    );
}

#[test]
fn shlana_1_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A6B@762,0"
    );
}

#[test]
fn shlana_1_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A74@592,0"
    );
}

#[test]
fn shlana_1_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A27}\u{1A62}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A27|\
         uni1A62@592,0"
    );
}

#[test]
fn shlana_1_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A32}\u{1A60}\u{1A45}\u{1A6B}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A32|\
         uni1A601A45@762,0|\
         uni1A6B@762,0|\
         uni1A61@932,0"
    );
}

#[test]
fn shlana_1_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A37}\u{1A60}\u{1A45}\u{1A6B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A37|\
         uni1A601A45@592,0|\
         uni1A6B@592,0"
    );
}

#[test]
fn shlana_1_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A60}\u{1A45}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A601A45@762,0"
    );
}

#[test]
fn shlana_1_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A21}\u{1A6C}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A21|\
         uni1A6C@592,-98|\
         uni1A74@592,0"
    );
}

#[test]
fn shlana_1_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A6C.wide@933,0"
    );
}

#[test]
fn shlana_1_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A26}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A26|\
         uni1A61@591,0"
    );
}

#[test]
fn shlana_1_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A63@932,0"
    );
}

#[test]
fn shlana_1_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A34}\u{1A64}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A34|\
         uni1A64@591,0"
    );
}

#[test]
fn shlana_1_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A4C}\u{1A63}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A4C|\
         uni1A74@762,0|\
         uni1A63@932,0"
    );
}

#[test]
fn shlana_1_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A64}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A74@592,0|\
         uni1A64@591,0"
    );
}

#[test]
fn shlana_1_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A33}\u{1A65}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A33|\
         uni1A65@592,0"
    );
}

#[test]
fn shlana_1_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3A}\u{1A66}\u{0020}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3A|\
         uni1A66@738,0|\
         space@591,0"
    );
}

#[test]
fn shlana_1_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A29}\u{1A67}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A29|\
         uni1A67@592,0"
    );
}

#[test]
fn shlana_1_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3E}\u{1A68}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3E.v2|\
         uni1A68@592,0"
    );
}

#[test]
fn shlana_1_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A35}\u{1A69}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A35|\
         uni1A69@592,0"
    );
}

#[test]
fn shlana_1_019() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A26}\u{1A6A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A26|\
         uni1A6A@592,0"
    );
}

#[test]
fn shlana_1_020() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A32}\u{1A6E}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A32@591,0|\
         uni1A61@1523,0"
    );
}

#[test]
fn shlana_1_021() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3D}\u{1A6E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A3D@591,0"
    );
}

#[test]
fn shlana_1_022() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A24}\u{1A6F}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6F|\
         uni1A24@1095,0|\
         uni1A61@1686,0"
    );
}

#[test]
fn shlana_1_023() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A27}\u{1A6F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6F|\
         uni1A27@1095,0"
    );
}

#[test]
fn shlana_1_024() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A38}\u{1A6E}\u{1A6C}\u{1A65}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A38@591,0|\
         uni1A6C@1183,0|\
         uni25CC@1182,0|\
         uni1A65@1773,0|\
         uni1A61@1773,0"
    );
}

#[test]
fn shlana_1_025() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A6E}\u{1A6C}\u{1A65}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A36@591,0|\
         uni1A6C@1183,0|\
         uni25CC@1182,0|\
         uni1A65@1773,0"
    );
}

#[test]
fn shlana_1_026() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6E}\u{1A6C}\u{1A68}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A20@591,0|\
         uni1A6C.wide@1524,0|\
         uni25CC@1523,0|\
         uni1A68@2114,0|\
         uni1A61@2114,0"
    );
}

#[test]
fn shlana_1_027() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6E}\u{1A6C}\u{1A68}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A20@591,0|\
         uni1A6C.wide@1524,0|\
         uni25CC@1523,0|\
         uni1A68@2114,0"
    );
}

#[test]
fn shlana_1_028() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A41}\u{1A6E}\u{1A62}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A41@591,0|\
         uni1A62@1183,0|\
         uni1A63@1182,0"
    );
}

#[test]
fn shlana_1_029() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3E}\u{1A73}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3E.v2|\
         uni1A73@592,0"
    );
}

#[test]
fn shlana_1_030() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6E}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A20@591,0|\
         uni1A63@1523,0"
    );
}

#[test]
fn shlana_1_031() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A39}\u{1A60}\u{1A3F}\u{1A6E}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A39@591,0|\
         uni1A601A3F@1323,0|\
         uni1A61@1549,0"
    );
}

#[test]
fn shlana_1_032() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A60}\u{1A3F}\u{1A6E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A3B@591,0|\
         uni1A601A3F@1523,0"
    );
}

#[test]
fn shlana_1_033() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A601A3F@932,0"
    );
}

#[test]
fn shlana_1_034() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3E}\u{1A6E}\u{1A6C}\u{1A65}\u{1A4B}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A3E.v2@591,0|\
         uni1A6C@1183,0|\
         uni25CC@1323,0|\
         uni1A65@1914,0|\
         uni1A4B@1914,0|\
         uni1A61@2505,0"
    );
}

#[test]
fn shlana_1_035() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A56}\u{1A6E}\u{1A6C}\u{1A65}\u{1A4B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A20@591,0|\
         uni1A56.wide@1524,0|\
         uni1A6C.wide@1524,-547|\
         uni25CC@1523,0|\
         uni1A65@2114,0|\
         uni1A4B@2114,0"
    );
}

#[test]
fn shlana_1_036() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A70}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A70|\
         uni1A48@591,0|\
         uni1A61@1182,0"
    );
}

#[test]
fn shlana_1_037() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3E}\u{1A70}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A70|\
         uni1A3E.v2@591,0"
    );
}

#[test]
fn shlana_1_038() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2A}\u{1A70}\u{1A6C}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A70|\
         uni1A2A@591,0|\
         uni1A6C@1183,0|\
         uni1A61@1182,0"
    );
}

#[test]
fn shlana_1_039() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A29}\u{1A62}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A29|\
         uni1A62@592,0|\
         uni1A601A3F@591,0"
    );
}

#[test]
fn shlana_1_040() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A72}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A72|\
         uni1A36@591,0"
    );
}

#[test]
fn shlana_1_041() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A22}\u{1A71}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A71|\
         uni1A22@591,0"
    );
}

#[test]
fn shlana_1_042() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A34}\u{1A71}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A71|\
         uni1A34@591,0|\
         uni1A601A3F@1182,0"
    );
}

#[test]
fn shlana_1_043() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6E}\u{1A6C}\u{1A68}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A20@591,0|\
         uni1A6C.wide@1524,0|\
         uni25CC@1523,0|\
         uni1A68@2114,0|\
         uni1A61@2114,0"
    );
}

#[test]
fn shlana_1_044() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6E}\u{1A6C}\u{1A68}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A20@591,0|\
         uni1A6C.wide@1524,0|\
         uni25CC@1523,0|\
         uni1A68@2114,0"
    );
}

#[test]
fn shlana_1_045() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A70}\u{1A62}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A70|\
         uni1A20@591,0|\
         uni1A62@1353,0"
    );
}

#[test]
fn shlana_1_046() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A58}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A58@592,0"
    );
}

#[test]
fn shlana_1_047() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A34}\u{1A62}\u{1A60}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A34|\
         uni1A62@592,0|\
         uni1A601A26@592,0"
    );
}

#[test]
fn shlana_1_048() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A4C}\u{1A65}\u{1A74}\u{0020}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A4C|\
         uni1A65@762,0|\
         uni1A74@1211,0|\
         space@932,0"
    );
}

#[test]
fn shlana_1_049() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A65}\u{1A60}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A65@762,0|\
         uni1A601A26@762,0"
    );
}

#[test]
fn shlana_1_050() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A62}\u{1A60}\u{1A3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A62@762,0|\
         uni1A601A3E@762,0"
    );
}

#[test]
fn shlana_1_051() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A62}\u{1A3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A62@762,0|\
         uni1A3E.v2@932,0"
    );
}

#[test]
fn shlana_1_052() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2F}\u{1A6D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A2F|\
         uni1A6D@591,0"
    );
}

#[test]
fn shlana_10_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A53}\u{1A6F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6F|\
         uni1A53@1095,0"
    );
}

#[test]
fn shlana_10_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A50}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A50|\
         uni1A63@591,0"
    );
}

#[test]
fn shlana_10_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A50}\u{1A75}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A50|\
         uni1A75@738,0|\
         uni25CC@591,0|\
         uni1A63@1182,0"
    );
}

#[test]
fn shlana_10_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2F}\u{1A6A}\u{1A55}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A2F|\
         uni1A6A@592,-188|\
         uni1A55@591,0|\
         uni25CC@817,0|\
         uni1A63@1408,0"
    );
}

#[test]
fn shlana_10_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A63}\u{1A37}\u{1A70}\u{1A56}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3B|\
         uni1A63@932,0|\
         uni1A70@1523,0|\
         uni1A37@2114,0|\
         uni25CC@2705,0|\
         uni1A56@3296,0"
    );
}

#[test]
fn shlana_10_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A76}\u{1A6D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A36|\
         uni1A76@592,0|\
         uni25CC@591,0|\
         uni1A6D@1182,0"
    );
}

#[test]
fn shlana_10_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A39}\u{1A65}\u{1A56}\u{1A69}\u{1A75}\u{1A7B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A39|\
         uni1A65@592,0|\
         uni25CC@732,0|\
         uni1A56@1323,0|\
         uni1A69@1323,-547|\
         uni1A75@1323,0|\
         uni1A7B@1595,0"
    );
}

#[test]
fn shlana_10_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A56}\u{1A60}\u{1A45}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A56.wide@933,0|\
         uni1A601A45@762,-547|\
         uni1A26@932,0"
    );
}

#[test]
fn shlana_10_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A56}\u{1A60}\u{1A45}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A56.wide@933,0|\
         uni1A601A45@762,-547|\
         uni25CC@932,0|\
         uni1A63@1523,0"
    );
}

#[test]
fn shlana_10_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A55}\u{1A60}\u{1A3F}\u{1A6E}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A55|\
         uni1A3B@226,0|\
         uni1A601A3F@1158,0|\
         uni1A6E@1384,0|\
         uni25CC@1975,0|\
         uni1A61@2566,0"
    );
}

#[test]
fn shlana_10_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A69}\u{1A76}\u{1A63}\u{1A60}\u{1A36}\u{1A60}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A69@762,0|\
         uni1A76@762,0|\
         uni25CC@932,0|\
         uni1A63@1523,0|\
         uni1A601A36@2115,0|\
         uni1A601A26@2115,-367"
    );
}

#[test]
fn shlana_10_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A4B}\u{1A62}\u{1A60}\u{1A2D}\u{1A5B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A4B|\
         uni1A62@592,0|\
         uni1A601A2D@592,0|\
         uni25CC@591,0|\
         uni1A5B.ratha_nohost@1182,0"
    );
}

#[test]
fn shlana_10_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A46}\u{1A62}\u{1A20}\u{1A60}\u{1A2F}\u{1A65}\u{1A7A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A46|\
         uni1A62@592,0|\
         uni1A20@680,0|\
         uni1A601A2F@1442,0|\
         uni1A65@1442,0|\
         uni1A7A@1442,357"
    );
}

#[test]
fn shlana_10_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A46}\u{1A62}\u{1A20}\u{1A60}\u{1A2F}\u{1A65}\u{1A7C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A46|\
         uni1A62@592,0|\
         uni1A20@680,0|\
         uni1A601A2F@1442,0|\
         uni1A65@1442,0|\
         uni1A7C@1442,357"
    );
}

#[test]
fn shlana_10_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A46}\u{1A63}\u{1A48}\u{1A60}\u{1A32}\u{1A55}\u{1A7A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A46|\
         uni1A63@680,0|\
         uni1A55@1271,0|\
         uni1A48@1497,0|\
         uni1A601A32@2089,0|\
         uni1A7A@2089,0"
    );
}

#[test]
fn shlana_10_019() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A63}\u{1A48}\u{1A60}\u{1A32}\u{1A55}\u{1A7C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A63@591,0|\
         uni1A55@1182,0|\
         uni1A48@1408,0|\
         uni1A601A32@2000,0|\
         uni1A7C@2000,0"
    );
}

#[test]
fn shlana_10_020() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A41}\u{1A6A}\u{1A60}\u{1A37}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A41|\
         uni1A601A37@591,0|\
         uni1A6A@724,-367"
    );
}

#[test]
fn shlana_10_021() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A66}\u{1A75}\u{1A60}\u{1A36}\u{1A6C}\u{1A76}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3B|\
         uni1A66@762,0|\
         uni1A75@762,357|\
         uni1A601A36@762,0|\
         uni25CC@932,0|\
         uni1A6C@1523,0|\
         uni1A76@1523,0|\
         uni1A26@1523,0"
    );
}

#[test]
fn shlana_10_022() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A38}\u{1A62}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A38|\
         uni1A62@506,0|\
         uni1A63@591,0"
    );
}

#[test]
fn shlana_10_023() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A43}\u{1A6A}\u{1A62}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A43|\
         uni1A6A@762,0|\
         uni25CC@932,0|\
         uni1A62@1523,0"
    );
}

#[test]
fn shlana_10_024() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2F}\u{1A6C}\u{1A62}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A2F|\
         uni1A6C@592,-188|\
         uni25CC@591,0|\
         uni1A62@1182,0"
    );
}

#[test]
fn shlana_10_025() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2F}\u{1A6C}\u{1A62}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A2F|\
         uni1A6C@592,-188|\
         uni25CC@591,0|\
         uni1A62@1182,0|\
         uni1A61@1182,0"
    );
}

#[test]
fn shlana_10_026() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A60}\u{1A45}\u{1A62}\u{1A61}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3B|\
         uni1A601A45@762,0|\
         uni1A62@762,0|\
         uni1A61@932,0"
    );
}

#[test]
fn shlana_10_027() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A32}\u{1A6F}\u{1A60}\u{1A36}\u{1A6C}\u{1A74}\u{1A75}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6F|\
         uni1A32@1095,0|\
         uni1A601A36@1857,0|\
         uni25CC@2027,0|\
         uni1A6C@2618,0|\
         uni1A74@2618,0|\
         uni1A75@2618,357"
    );
}

#[test]
fn shlana_10_029() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A32}\u{1A6C}\u{1A74}\u{1A75}\u{1A6F}\u{1A60}\u{1A36}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A32|\
         uni1A6C.wide@933,0|\
         uni1A74@762,0|\
         uni1A75@762,357|\
         uni1A6F@932,0|\
         uni25CC@2027,0|\
         uni1A601A36@2618,0"
    );
}

#[test]
fn shlana_10_030() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A60}\u{1A36}\u{1A6B}\u{1A7B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A601A36@592,0|\
         uni1A6B@592,0|\
         uni1A7B@954,0"
    );
}

#[test]
fn shlana_10_031() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A3E}\u{1A5B}\u{1A66}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A3E1A5B@932,0|\
         uni1A66@1548,0"
    );
}

#[test]
fn shlana_10_032() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A65}\u{1A3B}\u{1A5B}\u{1A63}\u{1A60}\u{1A36}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A36|\
         uni1A65@592,0|\
         uni1A3B1A5B@591,0|\
         uni1A63@1523,0|\
         uni1A601A36@2115,0"
    );
}

#[test]
fn shlana_10_033() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A35}\u{1A3E}\u{1A5C}\u{1A65}\u{1A20}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A35|\
         uni1A3E.v2@591,0|\
         uni1A5C@1183,0|\
         uni1A65@1183,0|\
         uni1A20@1323,0"
    );
}

#[test]
fn shlana_10_034() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A35}\u{1A69}\u{1A60}\u{1A37}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A35@591,0|\
         uni1A601A37@1182,0|\
         uni1A69@1315,-367"
    );
}

#[test]
fn shlana_10_035() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A45}\u{1A65}\u{1A48}\u{1A6E}\u{1A60}\u{1A48}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A45|\
         uni1A65@592,0|\
         uni1A6E@591,0|\
         uni1A48@1182,0|\
         uni1A601A48@1773,0"
    );
}

#[test]
fn shlana_10_036() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A22}\u{1A76}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A22|\
         uni1A76@738,0|\
         uni25CC@591,0|\
         uni1A63@1182,0"
    );
}

#[test]
fn shlana_10_037() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A63}\u{1A48}\u{1A36}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A63@591,0|\
         uni1A48@1182,0|\
         uni1A361A63@1773,0"
    );
}

#[test]
fn shlana_10_038() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A63}\u{1A48}\u{1A60}\u{1A36}\u{1A7B}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A63@591,0|\
         uni1A48@1182,0|\
         uni1A601A36@1774,0|\
         uni1A7B@1774,0|\
         uni25CC@1773,0|\
         uni1A63@2364,0"
    );
}

#[test]
fn shlana_10_039() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A60}\u{1A36}\u{1A7B}\u{1A6E}\u{1A62}\u{1A76}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A601A36@592,0|\
         uni1A7B@592,0|\
         uni1A6E@591,0|\
         uni25CC@1182,0|\
         uni1A621A76@1773,0|\
         uni25CC@1773,0|\
         uni1A63@2364,0"
    );
}

#[test]
fn shlana_10_040() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A60}\u{1A36}\u{1A7B}\u{1A6E}\u{1A62}\u{1A62}\u{1A76}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A601A36@592,0|\
         uni1A7B@592,0|\
         uni1A6E@591,0|\
         uni25CC@1182,0|\
         uni1A621A621A76@1773,0|\
         uni25CC@1773,0|\
         uni1A63@2364,0"
    );
}

#[test]
fn shlana_10_042() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A3E}\u{1A75}\u{1A63}\u{1A74}\u{1A7B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A3E@762,0|\
         uni1A75@762,0|\
         uni25CC@932,0|\
         uni1A631A74@1523,0|\
         uni1A7B@2114,0"
    );
}

#[test]
fn shlana_10_043() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A43}\u{1A6E}\u{1A5E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A43@591,0|\
         uni25CC@1523,0|\
         uni1A5E@2114,0"
    );
}

#[test]
fn shlana_10_045() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2F}\u{1A63}\u{1A74}\u{1A7B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A2F|\
         uni1A74@592,0|\
         uni1A63@591,0|\
         uni1A7B@1183,0"
    );
}

#[test]
fn shlana_10_046() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A3E}\u{1A74}\u{1A75}\u{1A63}\u{1A7B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A3E@762,0|\
         uni1A74@762,0|\
         uni1A75@762,357|\
         uni25CC@932,0|\
         uni1A63@1523,0|\
         uni1A7B@2115,0"
    );
}

#[test]
fn shlana_10_047() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2F}\u{1A74}\u{1A63}\u{1A7B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A2F|\
         uni1A74@592,0|\
         uni25CC@591,0|\
         uni1A63@1182,0|\
         uni1A7B@1774,0"
    );
}

#[test]
fn shlana_2_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A93}\u{1A60}\u{1A34}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A93|\
         uni1A601A34@591,0"
    );
}

#[test]
fn shlana_2_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A32}\u{1A75}\u{1A63}\u{1A60}\u{1A26}\u{1A7B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A32|\
         uni1A75@762,0|\
         uni25CC@932,0|\
         uni1A63@1523,0|\
         uni1A601A26@2115,0|\
         uni1A7B@2115,0"
    );
}

#[test]
fn shlana_2_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A33}\u{1A60}\u{1A36}\u{1A7B}\u{1A6B}\u{1A41}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A33|\
         uni1A601A36@592,0|\
         uni1A7B@592,0|\
         uni25CC@591,0|\
         uni1A6B@1182,0|\
         uni1A41@1182,0"
    );
}

#[test]
fn shlana_2_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A21}\u{1A62}\u{1A76}\u{1A7B}\u{1A6C}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A21|\
         uni1A621A76@592,0|\
         uni1A7B@1007,0|\
         uni25CC@591,0|\
         uni1A6C@1182,0|\
         uni1A26@1182,0"
    );
}

#[test]
fn shlana_2_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1AAD}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1AAD|\
         uni25CC@591,0|\
         uni1A63@1182,0"
    );
}

#[test]
fn shlana_2_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A36}\u{1A66}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A36@762,0|\
         uni1A66@762,0"
    );
}

#[test]
fn shlana_2_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A24}\u{1A60}\u{1A45}\u{1A6F}\u{1A76}\u{1A41}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6F|\
         uni1A24@1095,0|\
         uni1A601A45@1687,0|\
         uni1A76@1833,0|\
         uni1A41@1686,0"
    );
}

#[test]
fn shlana_2_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A45}\u{1A6B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A45@762,0|\
         uni1A6B@762,0"
    );
}

#[test]
fn shlana_2_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2F}\u{1A62}\u{1A75}\u{1A26}\u{1A60}\u{1A36}\u{1A66}\u{1A76}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A2F|\
         uni1A621A75@592,0|\
         uni1A26@591,0|\
         uni1A601A36@1183,0|\
         uni1A66@1183,0|\
         uni1A76@1183,357"
    );
}

#[test]
fn shlana_2_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A65}\u{1A60}\u{1A36}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A65@762,0|\
         uni1A601A36@762,0"
    );
}

#[test]
fn shlana_2_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A32}\u{1A63}\u{1A60}\u{1A3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A32|\
         uni1A63@932,0|\
         uni1A601A3E@1524,0"
    );
}

#[test]
fn shlana_2_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A60}\u{1A3F}\u{1A63}\u{1A60}\u{1A35}\u{1A65}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3B|\
         uni1A601A3F@932,0|\
         uni1A63@1158,0|\
         uni1A601A35@1750,0|\
         uni25CC@1749,0|\
         uni1A65@2340,0"
    );
}

#[test]
fn shlana_2_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A38}\u{1A60}\u{1A43}\u{1A60}\u{1A3F}\u{1A75}\u{1A41}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A38|\
         uni1A601A43@591,0|\
         uni1A601A3F@817,0|\
         uni1A75@1048,0|\
         uni1A41@1043,0"
    );
}

#[test]
fn shlana_2_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A60}\u{1A45}\u{1A6F}\u{1A75}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6F|\
         uni1A48@1095,0|\
         uni1A601A45@1687,0|\
         uni1A75@1687,0"
    );
}

#[test]
fn shlana_2_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A75}\u{1A6F}\u{1A60}\u{1A45}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A75@592,0|\
         uni1A6F@591,0|\
         uni25CC@1686,0|\
         uni1A601A45@2277,0"
    );
}

#[test]
fn shlana_2_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3F}\u{1A6A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3F|\
         uni1A6A@762,0"
    );
}

#[test]
fn shlana_2_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3E}\u{1A66}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3E.v2|\
         uni1A66@592,0"
    );
}

#[test]
fn shlana_2_019() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A3E}\u{1A6A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A3E@762,0|\
         uni1A6A@762,-367"
    );
}

#[test]
fn shlana_2_020() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A3E}\u{1A66}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A3E@762,0|\
         uni1A66@762,0"
    );
}

#[test]
fn shlana_2_021() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A39}\u{1A60}\u{1A45}\u{1A6B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A39|\
         uni1A601A45@592,0|\
         uni1A6B@592,0"
    );
}

#[test]
fn shlana_2_022() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A43}\u{1A6C}\u{1A74}\u{1A75}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A43@932,0|\
         uni1A6C@1059,-547|\
         uni1A74@1163,0|\
         uni1A75@1163,357"
    );
}

#[test]
fn shlana_2_023() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3E}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3E.v2|\
         uni1A63@732,0"
    );
}

#[test]
fn shlana_2_024() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A71}\u{1A75}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A71|\
         uni1A49@591,0|\
         uni1A75@1353,0"
    );
}

#[test]
fn shlana_2_025() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A45}\u{1A60}\u{1A3F}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A45|\
         uni1A601A3F@591,0|\
         uni1A26@817,0"
    );
}

#[test]
fn shlana_2_026() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A63}\u{1A60}\u{1A3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A63@932,0|\
         uni1A601A3E@1524,0"
    );
}

#[test]
fn shlana_2_027() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2F}\u{1A63}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A2F|\
         uni1A74@592,0|\
         uni1A63@591,0"
    );
}

#[test]
fn shlana_2_028() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A3E}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A3E@762,0|\
         uni1A63@932,0"
    );
}

#[test]
fn shlana_2_029() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A55}\u{1A63}\u{1A60}\u{1A38}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A55|\
         uni1A20@226,0|\
         uni1A63@1158,0|\
         uni1A601A37@1749,0"
    );
}

#[test]
fn shlana_2_030() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A55}\u{1A75}\u{1A63}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A55|\
         uni1A3B@226,0|\
         uni1A75@988,0|\
         uni25CC@1158,0|\
         uni1A631A74@1749,0"
    );
}

#[test]
fn shlana_2_031() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A55}\u{1A6C}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A55|\
         uni1A20@226,0|\
         uni1A6C.wide@1159,0|\
         uni1A26@1158,0"
    );
}

#[test]
fn shlana_2_032() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A55}\u{1A6B}\u{1A3E}\u{1A60}\u{1A31}\u{1A7A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A55|\
         uni1A48@226,0|\
         uni1A6B@818,0|\
         uni1A3E.v2@817,0|\
         uni1A601A31.narrow@1409,0|\
         uni1A7A@1409,0"
    );
}

#[test]
fn shlana_2_033() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A55}\u{1A60}\u{1A45}\u{1A6B}\u{1A3E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A55|\
         uni1A48@226,0|\
         uni1A601A45@818,0|\
         uni25CC@817,0|\
         uni1A6B@1408,0|\
         uni1A3E.v2@1408,0"
    );
}

#[test]
fn shlana_2_034() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A3E}\u{1A75}\u{1A63}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A3E@762,0|\
         uni1A75@762,0|\
         uni25CC@932,0|\
         uni1A631A74@1523,0"
    );
}

#[test]
fn shlana_2_035() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A3E}\u{1A6E}\u{1A6C}\u{1A68}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A49@591,0|\
         uni1A601A3E@1353,0|\
         uni1A6C@1353,-367|\
         uni25CC@1523,0|\
         uni1A68@2114,0|\
         uni1A26@2114,0"
    );
}

#[test]
fn shlana_2_036() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A3F}\u{1A6E}\u{1A6C}\u{1A68}\u{1A26}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A49@591,0|\
         uni1A601A3F@1523,0|\
         uni1A6C@1728,-367|\
         uni25CC@1749,0|\
         uni1A68@2340,0|\
         uni1A26@2340,0"
    );
}

#[test]
fn shlana_2_037() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A43}\u{1A63}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A43@932,0|\
         uni1A63@1158,0|\
         uni1A601A3F@1749,0"
    );
}

#[test]
fn shlana_3_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6C}\u{1A62}\u{1A43}\u{1A60}\u{1A3C}\u{1A7A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A6C.wide@933,0|\
         uni25CC@932,0|\
         uni1A62@1523,0|\
         uni1A43@1523,0|\
         antler@1523,0|\
         uni1A601A3C.wide@2456,0|\
         uni1A7A@2554,0"
    );
}

#[test]
fn shlana_3_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6C}\u{1A62}\u{1A43}\u{1A7A}\u{1A60}\u{1A3C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A6C.wide@933,0|\
         uni25CC@932,0|\
         uni1A62@1523,0|\
         uni1A43@1523,0|\
         antler@1523,0|\
         uni1A7A@2554,0|\
         uni1A601A3C.wide@2456,0"
    );
}

#[test]
fn shlana_3_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6C}\u{1A62}\u{1A43}\u{1A60}\u{1A7A}\u{1A3C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A6C.wide@933,0|\
         uni25CC@932,0|\
         uni1A62@1523,0|\
         uni1A43@1523,0|\
         antler@1523,0|\
         uni1A7A@2554,0|\
         uni1A601A3C.wide@2456,0"
    );
}

#[test]
fn shlana_3_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A55}\u{1A63}\u{1A60}\u{1A3C}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A55|\
         uni1A20@226,0|\
         uni1A63@1158,0|\
         antler@1158,0|\
         uni1A601A3C@1750,0"
    );
}

#[test]
fn shlana_3_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A34}\u{1A6C}\u{1A3C}\u{1A60}\u{1A3C}\u{1A66}\u{1A75}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A34|\
         uni1A6C@592,0|\
         uni1A3C@591,0|\
         antler@771,0|\
         uni1A601A3C.wide@1524,0|\
         uni1A66@1558,0|\
         uni1A75@1558,357"
    );
}

#[test]
fn shlana_3_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A3D}\u{1A5A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A20|\
         uni1A3D@932,0|\
         uni1A5A@1865,0"
    );
}

#[test]
fn shlana_3_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A31}\u{1A5B}\u{1A63}\u{1A60}\u{1A36}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A311A5B@591,0|\
         uni1A63@1523,0|\
         uni1A601A36@2115,0"
    );
}

#[test]
fn shlana_3_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A41}\u{1A2D}\u{1A5B}\u{1A37}\u{1A63}\u{1A60}\u{1A43}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A41|\
         uni1A2D1A5B@591,0|\
         uni1A37@1182,0|\
         uni1A63@1773,0|\
         uni1A601A43@2364,0"
    );
}

#[test]
fn shlana_3_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A41}\u{1A62}\u{1A2D}\u{1A5B}\u{1A37}\u{1A63}\u{1A60}\u{1A43}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A41|\
         uni1A62@592,0|\
         uni1A2D1A5B@591,0|\
         uni1A37@1182,0|\
         uni1A63@1773,0|\
         uni1A601A43@2364,0"
    );
}

#[test]
fn shlana_3_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A3B}\u{1A5B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A3B1A5B@591,0"
    );
}

#[test]
fn shlana_3_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A4B}\u{1A3E}\u{1A5B}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A4B|\
         uni1A3E1A5B@591,0"
    );
}

#[test]
fn shlana_3_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A41}\u{1A63}\u{1A29}\u{1A3D}\u{1A62}\u{1A60}\u{1A2E}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A41|\
         uni1A63@591,0|\
         uni1A29@1182,0|\
         uni1A3D@1773,0|\
         uni1A62@2535,0|\
         uni1A601A2E@2535,0"
    );
}

#[test]
fn shlana_4_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A34}\u{1A58}\u{1A60}\u{1A43}\u{1A63}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A34|\
         uni1A58@592,0|\
         uni25CC@591,0|\
         uni1A601A43@1182,0|\
         uni1A63@1408,0|\
         uni1A601A3F@1999,0"
    );
}

#[test]
fn shlana_4_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A58}\u{1A25}\u{1A6E}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A6E@591,0|\
         uni1A25@1182,0|\
         uni1A58@1944,0|\
         uni1A63@2115,0"
    );
}

#[test]
fn shlana_4_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A41}\u{1A58}\u{1A48}\u{1A66}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A41|\
         uni1A58@592,0|\
         uni1A48@591,0|\
         uni1A66@1183,0"
    );
}

#[test]
fn shlana_5_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A63}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A361A63|\
         uni1A74@592,0"
    );
}

#[test]
fn shlana_5_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3E}\u{1A36}\u{1A6E}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3E.v2|\
         uni1A6E@732,0|\
         uni1A361A63@1323,0"
    );
}

#[test]
fn shlana_5_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A6E}\u{1A62}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A361A63@591,0|\
         uni1A62@1183,0"
    );
}

#[test]
fn shlana_5_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A63}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A361A63|\
         uni1A601A3F@591,0"
    );
}

#[test]
fn shlana_5_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A75}\u{1A63}\u{1A60}\u{1A36}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A36|\
         uni1A75@592,0|\
         uni25CC@591,0|\
         uni1A63@1182,0|\
         uni1A601A36@1774,0"
    );
}

#[test]
fn shlana_5_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A4D}\u{1A36}\u{1A60}\u{1A34}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A4D|\
         uni1A361A63@932,0|\
         uni1A601A34@1524,0"
    );
}

#[test]
fn shlana_5_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A4B}\u{1A6B}\u{1A36}\u{1A60}\u{1A32}\u{1A55}\u{1A63}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A4B|\
         uni1A6B@592,0|\
         uni1A55@591,0|\
         uni1A361A63@817,0|\
         uni1A601A32@1409,0|\
         uni1A601A3F@1408,0"
    );
}

#[test]
fn shlana_5_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A76}\u{1A63}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A36|\
         uni1A76@592,0|\
         uni25CC@591,0|\
         uni1A631A74@1182,0"
    );
}

#[test]
fn shlana_5_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A60}\u{1A45}\u{1A63}\u{1A60}\u{1A37}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A361A63|\
         uni1A601A45@592,0|\
         uni1A601A37@591,0"
    );
}

#[test]
fn shlana_5_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A32}\u{1A75}\u{1A63}\u{1A74}\u{1A36}\u{1A60}\u{1A45}\u{1A63}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A32|\
         uni1A75@762,0|\
         uni25CC@932,0|\
         uni1A631A74@1523,0|\
         uni1A361A63@2114,0|\
         uni1A601A45@2706,0|\
         uni1A601A3F@2705,0"
    );
}

#[test]
fn shlana_5_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A36}\u{1A76}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A36@762,0|\
         uni1A76@762,0|\
         uni25CC@932,0|\
         uni1A63@1523,0"
    );
}

#[test]
fn shlana_6_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6F}\u{1A62}\u{1A60}\u{1A48}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6F|\
         uni1A20@1095,0|\
         uni1A62@1857,0|\
         uni1A601A48@2027,0"
    );
}

#[test]
fn shlana_6_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A36}\u{1A70}\u{1A6B}\u{1A76}\u{1A60}\u{1A32}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A70|\
         uni1A36@591,0|\
         uni1A6B@1183,0|\
         uni1A76@1183,357|\
         uni1A601A32@1183,0"
    );
}

#[test]
fn shlana_6_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A37}\u{1A55}\u{1A70}\u{1A34}\u{1A66}\u{1A60}\u{1A36}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A70|\
         uni1A55@591,0|\
         uni1A37@817,0|\
         uni1A34@1408,0|\
         uni1A66@2000,0|\
         uni1A601A36@2000,0"
    );
}

#[test]
fn shlana_6_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3C}\u{1A65}\u{1A45}\u{1A60}\u{1A48}\u{1A7A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3C|\
         uni1A65@859,0|\
         uni1A45@932,0|\
         uni1A601A48@1523,0|\
         uni1A7A@1754,0"
    );
}

#[test]
fn shlana_6_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A32}\u{1A6F}\u{1A3E}\u{1A60}\u{1A37}\u{1A7A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A6F@591,0|\
         uni1A32@1686,0|\
         uni1A3E.v2@2618,0|\
         uni1A601A37@3350,0|\
         uni1A7A@3581,0"
    );
}

#[test]
fn shlana_6_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A6E}\u{1A65}\u{1A41}\u{1A7A}\u{1A60}\u{1A37}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A48@591,0|\
         uni1A65@1183,0|\
         uni1A41@1182,0|\
         uni1A7A@1774,0|\
         uni1A601A37@1773,0"
    );
}

#[test]
fn shlana_7_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A34}\u{1A62}\u{1A75}\u{1A57}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A34|\
         uni1A621A75@592,0|\
         uni25CC@591,0|\
         uni1A57@1182,0|\
         uni1A63@1408,0"
    );
}

#[test]
fn shlana_7_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A21}\u{1A36}\u{1A60}\u{1A35}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A21|\
         uni1A361A63@591,0|\
         uni1A601A35@1183,0"
    );
}

#[test]
fn shlana_7_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A76}\u{1A60}\u{1A2F}\u{1A66}\u{00A0}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A76@592,0|\
         uni1A601A2F@592,0|\
         uni25CC@591,0|\
         uni1A66@1182,0|\
         space_nb@1182,0"
    );
}

#[test]
fn shlana_7_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A37}\u{1A76}\u{1A60}\u{1A3E}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A37|\
         uni1A76@592,0|\
         uni1A601A3E@592,0|\
         uni25CC@591,0|\
         uni1A63@1182,0"
    );
}

#[test]
fn shlana_7_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A37}\u{1A60}\u{1A76}\u{1A3E}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A37|\
         uni1A76@592,0|\
         uni1A601A3E@592,0|\
         uni25CC@591,0|\
         uni1A63@1182,0"
    );
}

#[test]
fn shlana_7_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A37}\u{1A76}\u{1A60}\u{1A2F}\u{1A63}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A37|\
         uni1A76@592,0|\
         uni1A601A2F@592,0|\
         uni25CC@591,0|\
         uni1A63@1182,0|\
         uni1A601A3F@1773,0"
    );
}

#[test]
fn shlana_7_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A27}\u{1A62}\u{1A60}\u{1A45}\u{1A64}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A27|\
         uni1A62@592,0|\
         uni1A601A45@592,0|\
         uni25CC@591,0|\
         uni1A64@1182,0"
    );
}

#[test]
fn shlana_7_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A6E}\u{1A60}\u{1A53}\u{1A60}\u{1A45}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A48@591,0|\
         uni1A601A53@1182,0|\
         uni1A601A45@1309,-547"
    );
}

#[test]
fn shlana_7_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A34}\u{1A6F}\u{1A60}\u{1A36}\u{1A73}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6F|\
         uni1A34@1095,0|\
         uni1A601A36@1687,0|\
         uni25CC@1686,0|\
         uni1A73@2277,0"
    );
}

#[test]
fn shlana_7_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A53}\u{1A60}\u{1A3E}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A53|\
         uni1A601A3E@762,0|\
         uni1A63@932,0"
    );
}

#[test]
fn shlana_7_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A20}\u{1A6E}\u{1A60}\u{1A48}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A20@591,0|\
         uni1A601A48@1523,0|\
         uni25CC@1749,0|\
         uni1A63@2340,0"
    );
}

#[test]
fn shlana_7_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A71}\u{1A60}\u{1A3E}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A71|\
         uni1A3B@591,0|\
         uni1A601A3E@1353,0|\
         uni25CC@1523,0|\
         uni1A63@2114,0"
    );
}

#[test]
fn shlana_7_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A6E}\u{1A60}\u{1A45}\u{1A76}\u{1A64}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A48@591,0|\
         uni1A601A45@1183,0|\
         uni25CC@1182,0|\
         uni1A76@1773,0|\
         uni25CC@1773,0|\
         uni1A64@2364,0"
    );
}

#[test]
fn shlana_7_014() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A45}\u{1A6E}\u{1A60}\u{1A43}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A45@591,0|\
         uni1A601A43@1182,0|\
         uni25CC@1408,0|\
         uni1A63@1999,0"
    );
}

#[test]
fn shlana_7_015() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A35}\u{1A64}\u{1A60}\u{1A32}\u{1A69}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A35|\
         uni1A64@591,0|\
         uni1A601A32@862,0|\
         uni25CC@817,0|\
         uni1A69@1408,0"
    );
}

#[test]
fn shlana_7_016() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A29}\u{1A60}\u{1A53}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A29|\
         uni1A601A53@591,0"
    );
}

#[test]
fn shlana_7_017() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A6D}\u{1A60}\u{1A45}\u{1A7B}\u{1A63}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3B|\
         uni1A6D@932,0|\
         uni1A601A45@1136,-547|\
         uni1A7B@1203,195|\
         uni25CC@1158,0|\
         uni1A63@1749,0"
    );
}

#[test]
fn shlana_7_018() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A6B}\u{1A60}\u{1A26}\u{1A63}\u{1A60}\u{1A36}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A6B@592,0|\
         uni1A601A26@592,0|\
         uni25CC@591,0|\
         uni1A63@1182,0|\
         uni1A601A36@1774,0"
    );
}

#[test]
fn shlana_8_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A6C}\u{1A73}\u{1A75}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A3B|\
         uni1A6C.wide@933,0|\
         uni25CC@932,0|\
         uni1A73@1523,0|\
         uni1A75@1523,447"
    );
}

#[test]
fn shlana_8_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A48}\u{1A37}\u{1A77}\u{1A63}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A48|\
         uni1A37@591,0|\
         uni1A77@1183,0|\
         uni25CC@1182,0|\
         uni1A63@1773,0|\
         uni1A601A3F@2364,0"
    );
}

#[test]
fn shlana_8_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A45}\u{1A60}\u{1A3F}\u{1A59}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A45|\
         uni1A601A3F@591,0|\
         uni1A59@822,0"
    );
}

#[test]
fn shlana_8_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A6A}\u{1A7A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A6A@592,0|\
         uni25CC@591,0|\
         uni1A7A@1182,0"
    );
}

#[test]
fn shlana_8_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A3B}\u{1A71}\u{1A7B}\u{1A63}\u{1A60}\u{1A3F}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A71|\
         uni1A3B@591,0|\
         uni1A7B@1353,0|\
         uni25CC@1523,0|\
         uni1A63@2114,0|\
         uni1A601A3F@2705,0"
    );
}

#[test]
fn shlana_8_007() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A29}\u{1A60}\u{1A3F}\u{1A59}\u{1A32}\u{1A69}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A29|\
         uni1A601A3F@591,0|\
         uni1A59@822,0|\
         uni1A32@817,0|\
         uni1A69@1579,0|\
         uni1A74@1579,0"
    );
}

#[test]
fn shlana_8_008() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A45}\u{1A32}\u{1A5B}\u{1A69}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A45|\
         uni1A321A5B@591,0|\
         uni1A69@1183,-734"
    );
}

#[test]
fn shlana_8_009() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A45}\u{1A32}\u{1A60}\u{1A33}\u{1A69}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A45|\
         uni1A32@591,0|\
         uni1A601A33@1353,0|\
         uni1A69@1353,-547"
    );
}

#[test]
fn shlana_8_010() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A2F}\u{1A60}\u{1A3F}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A2F|\
         uni1A601A3F@591,0|\
         uni1A74@822,0"
    );
}

#[test]
fn shlana_8_011() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A49}\u{1A60}\u{1A36}\u{1A66}\u{1A62}\u{1A76}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A49|\
         uni1A601A36@762,0|\
         uni1A66@762,0|\
         uni1A621A76@1265,0"
    );
}

#[test]
fn shlana_8_012() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A41}\u{1A6E}\u{1A42}\u{1A60}\u{1A20}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A6E|\
         uni1A41@591,0|\
         uni1A42@1182,0|\
         uni1A601A20@1774,-547"
    );
}

#[test]
fn shlana_8_013() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A41}\u{1A60}\u{1A3F}\u{1A7A}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A41|\
         uni1A601A3F@591,0|\
         uni1A7A@822,0"
    );
}

#[test]
fn shlana_9_001() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A74}\u{1A37}\u{1A74}\u{1A75}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A74@592,0|\
         uni1A37@591,0|\
         uni1A74@1183,0|\
         uni1A75@1183,357"
    );
}

#[test]
fn shlana_9_002() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A74}\u{1A37}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A74@592,0|\
         uni1A37@591,0|\
         uni1A74@1183,0"
    );
}

#[test]
fn shlana_9_003() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A5D}\u{1A74}\u{1A75}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A5D@592,0|\
         uni1A74@592,0|\
         uni1A75@592,357"
    );
}

#[test]
fn shlana_9_004() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A74}\u{1A5D}\u{1A75}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A74@592,0|\
         uni25CC@591,0|\
         uni1A5D@1182,0|\
         uni1A75@1182,0"
    );
}

#[test]
fn shlana_9_005() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A5D}\u{1A74}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A5D@592,0|\
         uni1A74@592,0"
    );
}

#[test]
fn shlana_9_006() {
    assert_eq!(
        shape(
            "tests/fonts/text-rendering-tests/TestShapeLana.ttf",
            "\u{1A23}\u{1A74}\u{1A5D}",
            "--font-size=1000 --ned --remove-default-ignorables --font-funcs=ft",
        ),
        "uni1A23|\
         uni1A74@592,0|\
         uni25CC@591,0|\
         uni1A5D@1182,0"
    );
}

